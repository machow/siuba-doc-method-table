[{"category":"Attributes","name":"T","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Attributes","name":"array","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"non series array","examples":""},{"category":"Attributes","name":"base","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"deprecated","examples":""},{"category":"Attributes","name":"data","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Attributes","name":"flags","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"deprecated","examples":""},{"category":"Attributes","name":"ftype","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"deprecated","examples":""},{"category":"Attributes","name":"ftypes","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"deprecated","examples":""},{"category":"Attributes","name":"index","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"index","examples":""},{"category":"Attributes","name":"itemsize","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"deprecated","examples":""},{"category":"Attributes","name":"put","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"deprecated","examples":""},{"category":"Attributes","name":"shape","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"tuple or list","examples":""},{"category":"Attributes","name":"size","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"decision-needed","examples":""},{"category":"Attributes","name":"strides","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"deprecated","examples":""},{"category":"Attributes","name":"values","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"non series array","examples":""},{"category":"Binary operator functions","name":"add","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.add(_.y)","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">add<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>11<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>13<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>14<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>17<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>18<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>19<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y  result\n0  a  10  1      11\n1  a  11  2      13\n2  a  11  3      14\n3  b  13  4      17\n4  b  13  5      18\n5  b  13  6      19\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">add<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x + some_table.y AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x + some_table.y AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">add<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x + some_table.y AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x + some_table.y AS result \nFROM some_table\n"}]},{"category":"Binary operator functions","name":"div","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.div(_.y)","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">div<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>10.000000<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>5.500000<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>3.666667<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>3.250000<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>2.600000<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>2.166667<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y     result\n0  a  10  1  10.000000\n1  a  11  2   5.500000\n2  a  11  3   3.666667\n3  b  13  4   3.250000\n4  b  13  5   2.600000\n5  b  13  6   2.166667\n"}]},{"category":"Binary operator functions","name":"eq","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.eq(_.y)","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">eq<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>False<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y  result\n0  a  10  1   False\n1  a  11  2   False\n2  a  11  3   False\n3  b  13  4   False\n4  b  13  5   False\n5  b  13  6   False\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">eq<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x = some_table.y AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x = some_table.y AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">eq<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x = some_table.y AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x = some_table.y AS result \nFROM some_table\n"}]},{"category":"Binary operator functions","name":"floordiv","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.floordiv(_.y)","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">floordiv<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>10<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>5<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>3<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>3<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>2<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>2<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y  result\n0  a  10  1      10\n1  a  11  2       5\n2  a  11  3       3\n3  b  13  4       3\n4  b  13  5       2\n5  b  13  6       2\n"}]},{"category":"Binary operator functions","name":"ge","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.ge(_.y)","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">ge<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>True<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y  result\n0  a  10  1    True\n1  a  11  2    True\n2  a  11  3    True\n3  b  13  4    True\n4  b  13  5    True\n5  b  13  6    True\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">ge<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x >= some_table.y AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x >= some_table.y AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">ge<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x >= some_table.y AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x >= some_table.y AS result \nFROM some_table\n"}]},{"category":"Binary operator functions","name":"gt","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.gt(_.y)","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">gt<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>True<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y  result\n0  a  10  1    True\n1  a  11  2    True\n2  a  11  3    True\n3  b  13  4    True\n4  b  13  5    True\n5  b  13  6    True\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">gt<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x > some_table.y AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x > some_table.y AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">gt<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x > some_table.y AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x > some_table.y AS result \nFROM some_table\n"}]},{"category":"Binary operator functions","name":"le","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.le(_.y)","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">le<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>False<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y  result\n0  a  10  1   False\n1  a  11  2   False\n2  a  11  3   False\n3  b  13  4   False\n4  b  13  5   False\n5  b  13  6   False\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">le<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x <= some_table.y AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x <= some_table.y AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">le<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x <= some_table.y AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x <= some_table.y AS result \nFROM some_table\n"}]},{"category":"Binary operator functions","name":"lt","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.lt(_.y)","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">lt<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>False<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y  result\n0  a  10  1   False\n1  a  11  2   False\n2  a  11  3   False\n3  b  13  4   False\n4  b  13  5   False\n5  b  13  6   False\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">lt<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x < some_table.y AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x < some_table.y AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">lt<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x < some_table.y AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x < some_table.y AS result \nFROM some_table\n"}]},{"category":"Binary operator functions","name":"mod","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.mod(_.y)","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">mod<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>0<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>1<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>2<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>1<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>3<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>1<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y  result\n0  a  10  1       0\n1  a  11  2       1\n2  a  11  3       2\n3  b  13  4       1\n4  b  13  5       3\n5  b  13  6       1\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">mod<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x %% some_table.y AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x %% some_table.y AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">mod<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x %% some_table.y AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x %% some_table.y AS result \nFROM some_table\n"}]},{"category":"Binary operator functions","name":"mul","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.mul(_.y)","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">mul<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>10<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>22<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>33<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>52<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>65<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>78<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y  result\n0  a  10  1      10\n1  a  11  2      22\n2  a  11  3      33\n3  b  13  4      52\n4  b  13  5      65\n5  b  13  6      78\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">mul<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x * some_table.y AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x * some_table.y AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">mul<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x * some_table.y AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x * some_table.y AS result \nFROM some_table\n"}]},{"category":"Binary operator functions","name":"ne","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.ne(_.y)","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">ne<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>True<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y  result\n0  a  10  1    True\n1  a  11  2    True\n2  a  11  3    True\n3  b  13  4    True\n4  b  13  5    True\n5  b  13  6    True\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">ne<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x != some_table.y AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x != some_table.y AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">ne<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x != some_table.y AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x != some_table.y AS result \nFROM some_table\n"}]},{"category":"Binary operator functions","name":"pow","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.pow(_.y)","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">pow<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>10<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>121<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>1331<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>28561<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>371293<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>4826809<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y   result\n0  a  10  1       10\n1  a  11  2      121\n2  a  11  3     1331\n3  b  13  4    28561\n4  b  13  5   371293\n5  b  13  6  4826809\n"}]},{"category":"Binary operator functions","name":"round","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.round(2)","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">round<\/span><span class=\"p\">(<\/span><span class=\"mi\">2<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>10<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>11<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>11<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>13<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>13<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>13<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y  result\n0  a  10  1      10\n1  a  11  2      11\n2  a  11  3      11\n3  b  13  4      13\n4  b  13  5      13\n5  b  13  6      13\n"}]},{"category":"Binary operator functions","name":"sub","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.sub(_.y)","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">sub<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>9<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>9<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>8<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>9<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>8<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>7<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y  result\n0  a  10  1       9\n1  a  11  2       9\n2  a  11  3       8\n3  b  13  4       9\n4  b  13  5       8\n5  b  13  6       7\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">sub<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x - some_table.y AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x - some_table.y AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">sub<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x - some_table.y AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x - some_table.y AS result \nFROM some_table\n"}]},{"category":"Binary operator functions","name":"truediv","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.truediv(_.y)","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">truediv<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">y<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>10.000000<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>5.500000<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>3.666667<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>3.250000<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>2.600000<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>2.166667<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y     result\n0  a  10  1  10.000000\n1  a  11  2   5.500000\n2  a  11  3   3.666667\n3  b  13  4   3.250000\n4  b  13  5   2.600000\n5  b  13  6   2.166667\n"}]},{"category":"Combining \/ joining \/ merging","name":"update","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Computations \/ descriptive stats","name":"abs","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.abs()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">abs<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>10<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>11<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>11<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>13<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>13<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>13<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y  result\n0  a  10  1      10\n1  a  11  2      11\n2  a  11  3      11\n3  b  13  4      13\n4  b  13  5      13\n5  b  13  6      13\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">abs<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, abs(some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, abs(some_table.x) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">abs<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, abs(some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, abs(some_table.x) AS result \nFROM some_table\n"}]},{"category":"Computations \/ descriptive stats","name":"all","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.all()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">summarize<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"bp\">True<\/span><span class=\"p\">,<\/span> <span class=\"bp\">False<\/span><span class=\"p\">,<\/span> <span class=\"bp\">True<\/span><span class=\"p\">,<\/span> <span class=\"bp\">False<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"bp\">True<\/span><span class=\"p\">,<\/span> <span class=\"bp\">True<\/span><span class=\"p\">,<\/span> <span class=\"bp\">False<\/span><span class=\"p\">,<\/span> <span class=\"bp\">False<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">all<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>False<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   result\n0   False\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">summarize<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">all<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT bool_and(some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT bool_and(some_table.x) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">all<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, bool_and(some_table.x) AS result \nFROM some_table GROUP BY some_table.g\n<\/pre>","printed":"SELECT some_table.g, bool_and(some_table.x) AS result \nFROM some_table GROUP BY some_table.g\n"}]},{"category":"Computations \/ descriptive stats","name":"any","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.any()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">summarize<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"bp\">True<\/span><span class=\"p\">,<\/span> <span class=\"bp\">False<\/span><span class=\"p\">,<\/span> <span class=\"bp\">True<\/span><span class=\"p\">,<\/span> <span class=\"bp\">False<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"bp\">True<\/span><span class=\"p\">,<\/span> <span class=\"bp\">True<\/span><span class=\"p\">,<\/span> <span class=\"bp\">False<\/span><span class=\"p\">,<\/span> <span class=\"bp\">False<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">any<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>True<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   result\n0    True\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">summarize<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">any<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT bool_or(some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT bool_or(some_table.x) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">any<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, bool_or(some_table.x) AS result \nFROM some_table GROUP BY some_table.g\n<\/pre>","printed":"SELECT some_table.g, bool_or(some_table.x) AS result \nFROM some_table GROUP BY some_table.g\n"}]},{"category":"Computations \/ descriptive stats","name":"between","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.between(2,5)","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">between<\/span><span class=\"p\">(<\/span><span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>False<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y  result\n0  a  10  1   False\n1  a  11  2   False\n2  a  11  3   False\n3  b  13  4   False\n4  b  13  5   False\n5  b  13  6   False\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">between<\/span><span class=\"p\">(<\/span><span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x BETWEEN 2 AND 5 AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x BETWEEN 2 AND 5 AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">between<\/span><span class=\"p\">(<\/span><span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x BETWEEN 2 AND 5 AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x BETWEEN 2 AND 5 AS result \nFROM some_table\n"}]},{"category":"Computations \/ descriptive stats","name":"clip_lower","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"deprecated","examples":""},{"category":"Computations \/ descriptive stats","name":"clip_upper","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"deprecated","examples":""},{"category":"Computations \/ descriptive stats","name":"compound","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"deprecated","examples":""},{"category":"Computations \/ descriptive stats","name":"corr","fast grouped":"\ud83d\udea7","postgresql":"","note":"","expr_frame":"","support_category":"priority-high","examples":""},{"category":"Computations \/ descriptive stats","name":"count","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.count()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">summarize<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">count<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>6<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   result\n0       6\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">summarize<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">count<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT count(some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT count(some_table.x) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">count<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, count(some_table.x) AS result \nFROM some_table GROUP BY some_table.g\n<\/pre>","printed":"SELECT some_table.g, count(some_table.x) AS result \nFROM some_table GROUP BY some_table.g\n"}]},{"category":"Computations \/ descriptive stats","name":"cov","fast grouped":"\ud83d\udea7","postgresql":"","note":"","expr_frame":"","support_category":"priority-high","examples":""},{"category":"Computations \/ descriptive stats","name":"cummax","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.cummax()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">cummax<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>10<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>11<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>11<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>13<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>13<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>13<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y  result\n0  a  10  1      10\n1  a  11  2      11\n2  a  11  3      11\n3  b  13  4      13\n4  b  13  5      13\n5  b  13  6      13\n"}]},{"category":"Computations \/ descriptive stats","name":"cummin","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.cummin()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">cummin<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>10<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>10<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>10<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>10<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>10<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>10<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y  result\n0  a  10  1      10\n1  a  11  2      10\n2  a  11  3      10\n3  b  13  4      10\n4  b  13  5      10\n5  b  13  6      10\n"}]},{"category":"Computations \/ descriptive stats","name":"cumprod","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.cumprod()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">cumprod<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>10<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>110<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>1210<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>15730<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>204490<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>2658370<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y   result\n0  a  10  1       10\n1  a  11  2      110\n2  a  11  3     1210\n3  b  13  4    15730\n4  b  13  5   204490\n5  b  13  6  2658370\n"}]},{"category":"Computations \/ descriptive stats","name":"cumsum","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.cumsum()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">cumsum<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>10<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>21<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>32<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>45<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>58<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>71<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y  result\n0  a  10  1      10\n1  a  11  2      21\n2  a  11  3      32\n3  b  13  4      45\n4  b  13  5      58\n5  b  13  6      71\n"}]},{"category":"Computations \/ descriptive stats","name":"describe","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"decision-needed","examples":""},{"category":"Computations \/ descriptive stats","name":"diff","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.diff()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">diff<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>NaN<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>1.0<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>0.0<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>2.0<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>0.0<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>0.0<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y  result\n0  a  10  1     NaN\n1  a  11  2     1.0\n2  a  11  3     0.0\n3  b  13  4     2.0\n4  b  13  5     0.0\n5  b  13  6     0.0\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">diff<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x - lag(some_table.x, 1) OVER () AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x - lag(some_table.x, 1) OVER () AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">diff<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x - lag(some_table.x, 1) OVER (PARTITION BY some_table.g) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x - lag(some_table.x, 1) OVER (PARTITION BY some_table.g) AS result \nFROM some_table\n"}]},{"category":"Computations \/ descriptive stats","name":"factorize","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"tuple or list","examples":""},{"category":"Computations \/ descriptive stats","name":"is_monotonic","fast grouped":"\ud83d\udea7","postgresql":"","note":"","expr_frame":"","support_category":"priority-high","examples":""},{"category":"Computations \/ descriptive stats","name":"is_monotonic_decreasing","fast grouped":"\ud83d\udea7","postgresql":"","note":"","expr_frame":"","support_category":"priority-high","examples":""},{"category":"Computations \/ descriptive stats","name":"is_monotonic_increasing","fast grouped":"\ud83d\udea7","postgresql":"","note":"","expr_frame":"","support_category":"priority-high","examples":""},{"category":"Computations \/ descriptive stats","name":"is_unique","fast grouped":"\ud83d\udea7","postgresql":"","note":"","expr_frame":"","support_category":"priority-high","examples":""},{"category":"Computations \/ descriptive stats","name":"kurt","fast grouped":"\ud83d\udea7","postgresql":"","note":"","expr_frame":"","support_category":"priority-medium","examples":""},{"category":"Computations \/ descriptive stats","name":"kurtosis","fast grouped":"\ud83d\udea7","postgresql":"","note":"","expr_frame":"","support_category":"priority-medium","examples":""},{"category":"Computations \/ descriptive stats","name":"mad","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.mad()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">summarize<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">mad<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>1.166667<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n     result\n0  1.166667\n"}]},{"category":"Computations \/ descriptive stats","name":"max","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.max()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">summarize<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">max<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>13<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   result\n0      13\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">summarize<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">max<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT max(some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT max(some_table.x) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">max<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, max(some_table.x) AS result \nFROM some_table GROUP BY some_table.g\n<\/pre>","printed":"SELECT some_table.g, max(some_table.x) AS result \nFROM some_table GROUP BY some_table.g\n"}]},{"category":"Computations \/ descriptive stats","name":"mean","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.mean()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">summarize<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">mean<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>11.833333<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n      result\n0  11.833333\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">summarize<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">mean<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT avg(some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT avg(some_table.x) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">mean<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, avg(some_table.x) AS result \nFROM some_table GROUP BY some_table.g\n<\/pre>","printed":"SELECT some_table.g, avg(some_table.x) AS result \nFROM some_table GROUP BY some_table.g\n"}]},{"category":"Computations \/ descriptive stats","name":"median","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.median()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">summarize<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">median<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>12.0<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   result\n0    12.0\n"}]},{"category":"Computations \/ descriptive stats","name":"min","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.min()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">summarize<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">min<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>10<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   result\n0      10\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">summarize<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">min<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT min(some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT min(some_table.x) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">min<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, min(some_table.x) AS result \nFROM some_table GROUP BY some_table.g\n<\/pre>","printed":"SELECT some_table.g, min(some_table.x) AS result \nFROM some_table GROUP BY some_table.g\n"}]},{"category":"Computations \/ descriptive stats","name":"mode","fast grouped":"\ud83d\udea7","postgresql":"","note":"","expr_frame":"","support_category":"priority-medium","examples":""},{"category":"Computations \/ descriptive stats","name":"nunique","fast grouped":"\u2705","postgresql":"\u2705","note":"Cannot be used in a mutate with postgresql","expr_frame":"_.x.nunique()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">summarize<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">nunique<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>3<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   result\n0       3\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">summarize<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">nunique<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT count(distinct(some_table.x)) AS result \nFROM some_table\n<\/pre>","printed":"SELECT count(distinct(some_table.x)) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">nunique<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, count(distinct(some_table.x)) AS result \nFROM some_table GROUP BY some_table.g\n<\/pre>","printed":"SELECT some_table.g, count(distinct(some_table.x)) AS result \nFROM some_table GROUP BY some_table.g\n"}]},{"category":"Computations \/ descriptive stats","name":"pct_change","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.pct_change()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">pct_change<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>NaN<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>0.100000<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>0.000000<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>0.181818<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>0.000000<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>0.000000<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y    result\n0  a  10  1       NaN\n1  a  11  2  0.100000\n2  a  11  3  0.000000\n3  b  13  4  0.181818\n4  b  13  5  0.000000\n5  b  13  6  0.000000\n"}]},{"category":"Computations \/ descriptive stats","name":"prod","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.prod()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">summarize<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">prod<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>2658370<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n    result\n0  2658370\n"}]},{"category":"Computations \/ descriptive stats","name":"quantile","fast grouped":"\u274c","postgresql":"\u2705","note":"Cannot be used in a mutate with postgresql","expr_frame":"_.x.quantile(0.75)","support_category":"decision-needed","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">summarize<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">quantile<\/span><span class=\"p\">(<\/span><span class=\"mf\">0.75<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>13.0<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   result\n0    13.0\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">summarize<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">quantile<\/span><span class=\"p\">(<\/span><span class=\"mf\">0.75<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT percentile_cont(0.75) WITHIN GROUP (ORDER BY some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT percentile_cont(0.75) WITHIN GROUP (ORDER BY some_table.x) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">quantile<\/span><span class=\"p\">(<\/span><span class=\"mf\">0.75<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, percentile_cont(0.75) WITHIN GROUP (ORDER BY some_table.x) AS result \nFROM some_table GROUP BY some_table.g\n<\/pre>","printed":"SELECT some_table.g, percentile_cont(0.75) WITHIN GROUP (ORDER BY some_table.x) AS result \nFROM some_table GROUP BY some_table.g\n"}]},{"category":"Computations \/ descriptive stats","name":"rank","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.rank()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">rank<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>1.0<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>2.5<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>2.5<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>5.0<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>5.0<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>5.0<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y  result\n0  a  10  1     1.0\n1  a  11  2     2.5\n2  a  11  3     2.5\n3  b  13  4     5.0\n4  b  13  5     5.0\n5  b  13  6     5.0\n"}]},{"category":"Computations \/ descriptive stats","name":"sem","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.sem()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">summarize<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">sem<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>0.542627<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n     result\n0  0.542627\n"}]},{"category":"Computations \/ descriptive stats","name":"skew","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.skew()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">summarize<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">skew<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>-0.326494<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n     result\n0 -0.326494\n"}]},{"category":"Computations \/ descriptive stats","name":"std","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.std()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">summarize<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">std<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>1.32916<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n    result\n0  1.32916\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">summarize<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">std<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT stddev_samp(some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT stddev_samp(some_table.x) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">std<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, stddev_samp(some_table.x) AS result \nFROM some_table GROUP BY some_table.g\n<\/pre>","printed":"SELECT some_table.g, stddev_samp(some_table.x) AS result \nFROM some_table GROUP BY some_table.g\n"}]},{"category":"Computations \/ descriptive stats","name":"sum","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.sum()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">summarize<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">sum<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>71<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   result\n0      71\n"}]},{"category":"Computations \/ descriptive stats","name":"var","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.var()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">summarize<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">var<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>1.766667<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n     result\n0  1.766667\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">summarize<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">var<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT var_samp(some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT var_samp(some_table.x) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">summarize<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">var<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, var_samp(some_table.x) AS result \nFROM some_table GROUP BY some_table.g\n<\/pre>","printed":"SELECT some_table.g, var_samp(some_table.x) AS result \nFROM some_table GROUP BY some_table.g\n"}]},{"category":"Conversion","name":"__array__","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Conversion","name":"astype","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.astype('str')","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">astype<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;str&quot;<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>10<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>11<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>11<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>13<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>13<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>13<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y result\n0  a  10  1     10\n1  a  11  2     11\n2  a  11  3     11\n3  b  13  4     13\n4  b  13  5     13\n5  b  13  6     13\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">astype<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;str&quot;<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, CAST(some_table.x AS TEXT) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, CAST(some_table.x AS TEXT) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">astype<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;str&quot;<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, CAST(some_table.x AS TEXT) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, CAST(some_table.x AS TEXT) AS result \nFROM some_table\n"}]},{"category":"Conversion","name":"copy","fast grouped":"\u2705","postgresql":"\u274c","note":"","expr_frame":"_.x.copy()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">copy<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>10<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>11<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>11<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>13<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>13<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>13<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y  result\n0  a  10  1      10\n1  a  11  2      11\n2  a  11  3      11\n3  b  13  4      13\n4  b  13  5      13\n5  b  13  6      13\n"}]},{"category":"Conversion","name":"get_values","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"deprecated","examples":""},{"category":"Conversion","name":"to_list","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"decision-needed","examples":""},{"category":"Conversion","name":"to_numpy","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"decision-needed","examples":""},{"category":"Datetime methods","name":"dt.ceil","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.dt.ceil('D')","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">ceil<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;D&quot;<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>2019-01-02<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>2020-04-09<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>2021-07-16<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>2022-10-23<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x     result\n0  a 2019-01-01 01:01:01 2019-01-02\n1  a 2020-04-08 02:02:02 2020-04-09\n2  b 2021-07-15 03:03:03 2021-07-16\n3  b 2022-10-22 04:04:04 2022-10-23\n"}]},{"category":"Datetime methods","name":"dt.day_name","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.dt.day_name()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">day_name<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>Tuesday<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>Wednesday<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>Thursday<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>Saturday<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x     result\n0  a 2019-01-01 01:01:01    Tuesday\n1  a 2020-04-08 02:02:02  Wednesday\n2  b 2021-07-15 03:03:03   Thursday\n3  b 2022-10-22 04:04:04   Saturday\n"}]},{"category":"Datetime methods","name":"dt.floor","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.dt.floor('D')","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">floor<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;D&quot;<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>2019-01-01<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>2020-04-08<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>2021-07-15<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>2022-10-22<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x     result\n0  a 2019-01-01 01:01:01 2019-01-01\n1  a 2020-04-08 02:02:02 2020-04-08\n2  b 2021-07-15 03:03:03 2021-07-15\n3  b 2022-10-22 04:04:04 2022-10-22\n"}]},{"category":"Datetime methods","name":"dt.month_name","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.dt.month_name()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">month_name<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>January<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>April<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>July<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>October<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x   result\n0  a 2019-01-01 01:01:01  January\n1  a 2020-04-08 02:02:02    April\n2  b 2021-07-15 03:03:03     July\n3  b 2022-10-22 04:04:04  October\n"}]},{"category":"Datetime methods","name":"dt.normalize","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.dt.normalize()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">normalize<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>2019-01-01<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>2020-04-08<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>2021-07-15<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>2022-10-22<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x     result\n0  a 2019-01-01 01:01:01 2019-01-01\n1  a 2020-04-08 02:02:02 2020-04-08\n2  b 2021-07-15 03:03:03 2021-07-15\n3  b 2022-10-22 04:04:04 2022-10-22\n"}]},{"category":"Datetime methods","name":"dt.round","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.dt.round('D')","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">round<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;D&quot;<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>2019-01-01<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>2020-04-08<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>2021-07-15<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>2022-10-22<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x     result\n0  a 2019-01-01 01:01:01 2019-01-01\n1  a 2020-04-08 02:02:02 2020-04-08\n2  b 2021-07-15 03:03:03 2021-07-15\n3  b 2022-10-22 04:04:04 2022-10-22\n"}]},{"category":"Datetime methods","name":"dt.strftime","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.dt.strftime('%d')","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">strftime<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;<\/span><span class=\"si\">%d<\/span><span class=\"s2\">&quot;<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>01<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>08<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>15<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>22<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x result\n0  a 2019-01-01 01:01:01     01\n1  a 2020-04-08 02:02:02     08\n2  b 2021-07-15 03:03:03     15\n3  b 2022-10-22 04:04:04     22\n"}]},{"category":"Datetime methods","name":"dt.to_period","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.dt.to_period('D')","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">to_period<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;D&quot;<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>2019-01-01<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>2020-04-08<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>2021-07-15<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>2022-10-22<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x      result\n0  a 2019-01-01 01:01:01  2019-01-01\n1  a 2020-04-08 02:02:02  2020-04-08\n2  b 2021-07-15 03:03:03  2021-07-15\n3  b 2022-10-22 04:04:04  2022-10-22\n"}]},{"category":"Datetime methods","name":"dt.tz_localize","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.dt.tz_localize('UTC')","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">tz_localize<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;UTC&quot;<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>2019-01-01 01:01:01+00:00<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>2020-04-08 02:02:02+00:00<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>2021-07-15 03:03:03+00:00<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>2022-10-22 04:04:04+00:00<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x                    result\n0  a 2019-01-01 01:01:01 2019-01-01 01:01:01+00:00\n1  a 2020-04-08 02:02:02 2020-04-08 02:02:02+00:00\n2  b 2021-07-15 03:03:03 2021-07-15 03:03:03+00:00\n3  b 2022-10-22 04:04:04 2022-10-22 04:04:04+00:00\n"}]},{"category":"Datetime properties","name":"dt.date","fast grouped":"\u2705","postgresql":"\u274c","note":"","expr_frame":"_.x.dt.date","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">date<\/span><span class=\"p\">)<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>2019-01-01<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>2020-04-08<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>2021-07-15<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>2022-10-22<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x      result\n0  a 2019-01-01 01:01:01  2019-01-01\n1  a 2020-04-08 02:02:02  2020-04-08\n2  b 2021-07-15 03:03:03  2021-07-15\n3  b 2022-10-22 04:04:04  2022-10-22\n"}]},{"category":"Datetime properties","name":"dt.day","fast grouped":"\u2705","postgresql":"\u2705","note":"SQL returns a float.","expr_frame":"_.x.dt.day","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">day<\/span><span class=\"p\">)<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>1<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>8<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>15<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>22<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x  result\n0  a 2019-01-01 01:01:01       1\n1  a 2020-04-08 02:02:02       8\n2  b 2021-07-15 03:03:03      15\n3  b 2022-10-22 04:04:04      22\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">day<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, EXTRACT(day FROM some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, EXTRACT(day FROM some_table.x) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">day<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, EXTRACT(day FROM some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, EXTRACT(day FROM some_table.x) AS result \nFROM some_table\n"}]},{"category":"Datetime properties","name":"dt.dayofweek","fast grouped":"\u2705","postgresql":"\u2705","note":"SQL returns a float.","expr_frame":"_.x.dt.dayofweek","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">dayofweek<\/span><span class=\"p\">)<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>1<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>2<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>3<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>5<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x  result\n0  a 2019-01-01 01:01:01       1\n1  a 2020-04-08 02:02:02       2\n2  b 2021-07-15 03:03:03       3\n3  b 2022-10-22 04:04:04       5\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">dayofweek<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, CAST(CAST(EXTRACT(dow FROM some_table.x) + 6 AS INTEGER) %% 7 AS NUMERIC) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, CAST(CAST(EXTRACT(dow FROM some_table.x) + 6 AS INTEGER) %% 7 AS NUMERIC) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">dayofweek<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, CAST(CAST(EXTRACT(dow FROM some_table.x) + 6 AS INTEGER) %% 7 AS NUMERIC) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, CAST(CAST(EXTRACT(dow FROM some_table.x) + 6 AS INTEGER) %% 7 AS NUMERIC) AS result \nFROM some_table\n"}]},{"category":"Datetime properties","name":"dt.dayofyear","fast grouped":"\u2705","postgresql":"\u2705","note":"SQL returns a float.","expr_frame":"_.x.dt.dayofyear","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">dayofyear<\/span><span class=\"p\">)<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>1<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>99<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>196<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>295<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x  result\n0  a 2019-01-01 01:01:01       1\n1  a 2020-04-08 02:02:02      99\n2  b 2021-07-15 03:03:03     196\n3  b 2022-10-22 04:04:04     295\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">dayofyear<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, EXTRACT(doy FROM some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, EXTRACT(doy FROM some_table.x) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">dayofyear<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, EXTRACT(doy FROM some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, EXTRACT(doy FROM some_table.x) AS result \nFROM some_table\n"}]},{"category":"Datetime properties","name":"dt.days_in_month","fast grouped":"\u2705","postgresql":"\u2705","note":"SQL returns a float.","expr_frame":"_.x.dt.days_in_month","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">days_in_month<\/span><span class=\"p\">)<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>31<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>30<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>31<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>31<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x  result\n0  a 2019-01-01 01:01:01      31\n1  a 2020-04-08 02:02:02      30\n2  b 2021-07-15 03:03:03      31\n3  b 2022-10-22 04:04:04      31\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">days_in_month<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, EXTRACT(day FROM date_trunc('month', some_table.x) + interval '1 month - 1 day') AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, EXTRACT(day FROM date_trunc('month', some_table.x) + interval '1 month - 1 day') AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">days_in_month<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, EXTRACT(day FROM date_trunc('month', some_table.x) + interval '1 month - 1 day') AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, EXTRACT(day FROM date_trunc('month', some_table.x) + interval '1 month - 1 day') AS result \nFROM some_table\n"}]},{"category":"Datetime properties","name":"dt.daysinmonth","fast grouped":"\u2705","postgresql":"\u2705","note":"SQL returns a float.","expr_frame":"_.x.dt.daysinmonth","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">daysinmonth<\/span><span class=\"p\">)<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>31<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>30<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>31<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>31<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x  result\n0  a 2019-01-01 01:01:01      31\n1  a 2020-04-08 02:02:02      30\n2  b 2021-07-15 03:03:03      31\n3  b 2022-10-22 04:04:04      31\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">daysinmonth<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, EXTRACT(day FROM date_trunc('month', some_table.x) + interval '1 month - 1 day') AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, EXTRACT(day FROM date_trunc('month', some_table.x) + interval '1 month - 1 day') AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">daysinmonth<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, EXTRACT(day FROM date_trunc('month', some_table.x) + interval '1 month - 1 day') AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, EXTRACT(day FROM date_trunc('month', some_table.x) + interval '1 month - 1 day') AS result \nFROM some_table\n"}]},{"category":"Datetime properties","name":"dt.freq","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.dt.freq","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">freq<\/span><span class=\"p\">)<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>None<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>None<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>None<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>None<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x result\n0  a 2019-01-01 01:01:01   None\n1  a 2020-04-08 02:02:02   None\n2  b 2021-07-15 03:03:03   None\n3  b 2022-10-22 04:04:04   None\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">freq<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mNotImplementedError\u001b[0m                       Traceback (most recent call last)\n\u001b[0;32m<ipython-input-1-617dfa464797>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mtbl\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mLazyTbl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"some_table\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m\"g\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"x\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"y\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mquery\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtbl\u001b[0m \u001b[0;34m>>\u001b[0m \u001b[0mmutate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0m_\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfreq\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>>\u001b[0m \u001b[0mshow_query\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/dply\/verbs.py\u001b[0m in \u001b[0;36m__rrshift__\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m     74\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mPipeable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcalls\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcalls\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     75\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 76\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     77\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     78\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__call__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/dply\/verbs.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m     79\u001b[0m         \u001b[0mres\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     80\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mf\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcalls\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 81\u001b[0;31m             \u001b[0mres\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mres\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     82\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mres\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     83\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m    184\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    185\u001b[0m         \u001b[0;31m# in normal case, get method to call, and then call it\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 186\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minst\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mrest\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    187\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    188\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mstaticmethod\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/.pyenv\/versions\/3.6.8\/lib\/python3.6\/functools.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kw)\u001b[0m\n\u001b[1;32m    805\u001b[0m                             '1 positional argument')\n\u001b[1;32m    806\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 807\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mdispatch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__class__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    808\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    809\u001b[0m     \u001b[0mfuncname\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'__name__'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'singledispatch function'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/sql\/verbs.py\u001b[0m in \u001b[0;36m_mutate\u001b[0;34m(__data, **kwargs)\u001b[0m\n\u001b[1;32m    485\u001b[0m         \u001b[0;31m# need to use inner cols, since sel.columns uses ColumnClause, not Label\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    486\u001b[0m         \u001b[0mlabs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mk\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mv\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mlift_inner_cols\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mv\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msql\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0melements\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mLabel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 487\u001b[0;31m         \u001b[0mnew_call\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m__data\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverb_name\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"Mutate\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0marg_name\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcolname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    488\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    489\u001b[0m         \u001b[0msel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_mutate_select\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnew_call\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m__data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/sql\/verbs.py\u001b[0m in \u001b[0;36mshape_call\u001b[0;34m(self, call, window, str_accessors, verb_name, arg_name)\u001b[0m\n\u001b[1;32m    253\u001b[0m         \u001b[0;31m# raise informative error message if missing translation\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    254\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 255\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mcall_shaper\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0menter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcall\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    256\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mFunctionLookupError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    257\u001b[0m             raise SqlFunctionLookupError.from_verb(\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36menter\u001b[0;34m(self, node)\u001b[0m\n\u001b[1;32m    507\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcreate_local_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mCall\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    508\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 509\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0menter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    510\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    511\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0menter___getattr__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36menter\u001b[0;34m(self, node)\u001b[0m\n\u001b[1;32m    404\u001b[0m         \u001b[0mf_enter\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgeneric_enter\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    405\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 406\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mf_enter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    407\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    408\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mexit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36menter___getattr__\u001b[0;34m(self, node)\u001b[0m\n\u001b[1;32m    519\u001b[0m                 \u001b[0;31m# e.g. dt.round, rather than round\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    520\u001b[0m                 \u001b[0mattr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mprev_attr\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'.'\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mattr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 521\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcreate_local_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mattr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mprev_obj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mCall\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    522\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    523\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgeneric_enter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36mcreate_local_call\u001b[0;34m(self, name, prev_obj, cls, func_args, func_kwargs)\u001b[0m\n\u001b[1;32m    489\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    490\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misclass\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlocal_func\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0missubclass\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlocal_func\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mException\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 491\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mlocal_func\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    492\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    493\u001b[0m         return cls(\n\n\u001b[0;31mNotImplementedError\u001b[0m: \n<\/pre>","printed":"\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mNotImplementedError\u001b[0m                       Traceback (most recent call last)\n\u001b[0;32m<ipython-input-1-617dfa464797>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mtbl\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mLazyTbl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"some_table\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m\"g\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"x\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"y\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mquery\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtbl\u001b[0m \u001b[0;34m>>\u001b[0m \u001b[0mmutate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0m_\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfreq\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>>\u001b[0m \u001b[0mshow_query\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/dply\/verbs.py\u001b[0m in \u001b[0;36m__rrshift__\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m     74\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mPipeable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcalls\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcalls\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     75\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 76\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     77\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     78\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__call__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/dply\/verbs.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m     79\u001b[0m         \u001b[0mres\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     80\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mf\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcalls\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 81\u001b[0;31m             \u001b[0mres\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mres\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     82\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mres\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     83\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m    184\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    185\u001b[0m         \u001b[0;31m# in normal case, get method to call, and then call it\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 186\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minst\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mrest\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    187\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    188\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mstaticmethod\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/.pyenv\/versions\/3.6.8\/lib\/python3.6\/functools.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kw)\u001b[0m\n\u001b[1;32m    805\u001b[0m                             '1 positional argument')\n\u001b[1;32m    806\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 807\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mdispatch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__class__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    808\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    809\u001b[0m     \u001b[0mfuncname\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'__name__'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'singledispatch function'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/sql\/verbs.py\u001b[0m in \u001b[0;36m_mutate\u001b[0;34m(__data, **kwargs)\u001b[0m\n\u001b[1;32m    485\u001b[0m         \u001b[0;31m# need to use inner cols, since sel.columns uses ColumnClause, not Label\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    486\u001b[0m         \u001b[0mlabs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mk\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mv\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mlift_inner_cols\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mv\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msql\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0melements\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mLabel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 487\u001b[0;31m         \u001b[0mnew_call\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m__data\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverb_name\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"Mutate\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0marg_name\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcolname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    488\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    489\u001b[0m         \u001b[0msel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_mutate_select\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnew_call\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m__data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/sql\/verbs.py\u001b[0m in \u001b[0;36mshape_call\u001b[0;34m(self, call, window, str_accessors, verb_name, arg_name)\u001b[0m\n\u001b[1;32m    253\u001b[0m         \u001b[0;31m# raise informative error message if missing translation\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    254\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 255\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mcall_shaper\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0menter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcall\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    256\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mFunctionLookupError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    257\u001b[0m             raise SqlFunctionLookupError.from_verb(\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36menter\u001b[0;34m(self, node)\u001b[0m\n\u001b[1;32m    507\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcreate_local_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mCall\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    508\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 509\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0menter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    510\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    511\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0menter___getattr__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36menter\u001b[0;34m(self, node)\u001b[0m\n\u001b[1;32m    404\u001b[0m         \u001b[0mf_enter\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgeneric_enter\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    405\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 406\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mf_enter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    407\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    408\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mexit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36menter___getattr__\u001b[0;34m(self, node)\u001b[0m\n\u001b[1;32m    519\u001b[0m                 \u001b[0;31m# e.g. dt.round, rather than round\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    520\u001b[0m                 \u001b[0mattr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mprev_attr\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'.'\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mattr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 521\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcreate_local_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mattr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mprev_obj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mCall\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    522\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    523\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgeneric_enter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36mcreate_local_call\u001b[0;34m(self, name, prev_obj, cls, func_args, func_kwargs)\u001b[0m\n\u001b[1;32m    489\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    490\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misclass\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlocal_func\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0missubclass\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlocal_func\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mException\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 491\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mlocal_func\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    492\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    493\u001b[0m         return cls(\n\n\u001b[0;31mNotImplementedError\u001b[0m: \n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">freq<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mNotImplementedError\u001b[0m                       Traceback (most recent call last)\n\u001b[0;32m<ipython-input-1-6303eaf38dc4>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0msiuba\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mgroup_by\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mquery\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtbl\u001b[0m \u001b[0;34m>>\u001b[0m \u001b[0mgroup_by\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mg\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>>\u001b[0m \u001b[0mmutate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0m_\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfreq\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>>\u001b[0m \u001b[0mshow_query\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/dply\/verbs.py\u001b[0m in \u001b[0;36m__rrshift__\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m     74\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mPipeable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcalls\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcalls\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     75\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 76\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     77\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     78\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__call__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/dply\/verbs.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m     79\u001b[0m         \u001b[0mres\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     80\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mf\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcalls\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 81\u001b[0;31m             \u001b[0mres\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mres\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     82\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mres\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     83\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m    184\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    185\u001b[0m         \u001b[0;31m# in normal case, get method to call, and then call it\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 186\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minst\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mrest\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    187\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    188\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mstaticmethod\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/.pyenv\/versions\/3.6.8\/lib\/python3.6\/functools.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kw)\u001b[0m\n\u001b[1;32m    805\u001b[0m                             '1 positional argument')\n\u001b[1;32m    806\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 807\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mdispatch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__class__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    808\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    809\u001b[0m     \u001b[0mfuncname\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'__name__'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'singledispatch function'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/sql\/verbs.py\u001b[0m in \u001b[0;36m_mutate\u001b[0;34m(__data, **kwargs)\u001b[0m\n\u001b[1;32m    485\u001b[0m         \u001b[0;31m# need to use inner cols, since sel.columns uses ColumnClause, not Label\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    486\u001b[0m         \u001b[0mlabs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mk\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mv\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mlift_inner_cols\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mv\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msql\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0melements\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mLabel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 487\u001b[0;31m         \u001b[0mnew_call\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m__data\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverb_name\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"Mutate\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0marg_name\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcolname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    488\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    489\u001b[0m         \u001b[0msel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_mutate_select\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnew_call\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m__data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/sql\/verbs.py\u001b[0m in \u001b[0;36mshape_call\u001b[0;34m(self, call, window, str_accessors, verb_name, arg_name)\u001b[0m\n\u001b[1;32m    253\u001b[0m         \u001b[0;31m# raise informative error message if missing translation\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    254\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 255\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mcall_shaper\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0menter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcall\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    256\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mFunctionLookupError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    257\u001b[0m             raise SqlFunctionLookupError.from_verb(\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36menter\u001b[0;34m(self, node)\u001b[0m\n\u001b[1;32m    507\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcreate_local_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mCall\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    508\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 509\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0menter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    510\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    511\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0menter___getattr__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36menter\u001b[0;34m(self, node)\u001b[0m\n\u001b[1;32m    404\u001b[0m         \u001b[0mf_enter\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgeneric_enter\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    405\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 406\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mf_enter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    407\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    408\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mexit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36menter___getattr__\u001b[0;34m(self, node)\u001b[0m\n\u001b[1;32m    519\u001b[0m                 \u001b[0;31m# e.g. dt.round, rather than round\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    520\u001b[0m                 \u001b[0mattr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mprev_attr\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'.'\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mattr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 521\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcreate_local_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mattr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mprev_obj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mCall\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    522\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    523\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgeneric_enter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36mcreate_local_call\u001b[0;34m(self, name, prev_obj, cls, func_args, func_kwargs)\u001b[0m\n\u001b[1;32m    489\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    490\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misclass\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlocal_func\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0missubclass\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlocal_func\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mException\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 491\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mlocal_func\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    492\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    493\u001b[0m         return cls(\n\n\u001b[0;31mNotImplementedError\u001b[0m: \n<\/pre>","printed":"\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mNotImplementedError\u001b[0m                       Traceback (most recent call last)\n\u001b[0;32m<ipython-input-1-6303eaf38dc4>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0msiuba\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mgroup_by\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mquery\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtbl\u001b[0m \u001b[0;34m>>\u001b[0m \u001b[0mgroup_by\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mg\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>>\u001b[0m \u001b[0mmutate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0m_\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfreq\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>>\u001b[0m \u001b[0mshow_query\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/dply\/verbs.py\u001b[0m in \u001b[0;36m__rrshift__\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m     74\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mPipeable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcalls\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcalls\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     75\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 76\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     77\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     78\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__call__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/dply\/verbs.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m     79\u001b[0m         \u001b[0mres\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     80\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mf\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcalls\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 81\u001b[0;31m             \u001b[0mres\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mres\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     82\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mres\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     83\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m    184\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    185\u001b[0m         \u001b[0;31m# in normal case, get method to call, and then call it\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 186\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minst\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mrest\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    187\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    188\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mstaticmethod\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/.pyenv\/versions\/3.6.8\/lib\/python3.6\/functools.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kw)\u001b[0m\n\u001b[1;32m    805\u001b[0m                             '1 positional argument')\n\u001b[1;32m    806\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 807\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mdispatch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__class__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    808\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    809\u001b[0m     \u001b[0mfuncname\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'__name__'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'singledispatch function'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/sql\/verbs.py\u001b[0m in \u001b[0;36m_mutate\u001b[0;34m(__data, **kwargs)\u001b[0m\n\u001b[1;32m    485\u001b[0m         \u001b[0;31m# need to use inner cols, since sel.columns uses ColumnClause, not Label\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    486\u001b[0m         \u001b[0mlabs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mk\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mv\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mlift_inner_cols\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mv\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msql\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0melements\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mLabel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 487\u001b[0;31m         \u001b[0mnew_call\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m__data\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverb_name\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"Mutate\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0marg_name\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcolname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    488\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    489\u001b[0m         \u001b[0msel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_mutate_select\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnew_call\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m__data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/sql\/verbs.py\u001b[0m in \u001b[0;36mshape_call\u001b[0;34m(self, call, window, str_accessors, verb_name, arg_name)\u001b[0m\n\u001b[1;32m    253\u001b[0m         \u001b[0;31m# raise informative error message if missing translation\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    254\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 255\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mcall_shaper\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0menter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcall\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    256\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mFunctionLookupError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    257\u001b[0m             raise SqlFunctionLookupError.from_verb(\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36menter\u001b[0;34m(self, node)\u001b[0m\n\u001b[1;32m    507\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcreate_local_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mCall\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    508\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 509\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0menter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    510\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    511\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0menter___getattr__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36menter\u001b[0;34m(self, node)\u001b[0m\n\u001b[1;32m    404\u001b[0m         \u001b[0mf_enter\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgeneric_enter\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    405\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 406\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mf_enter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    407\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    408\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mexit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36menter___getattr__\u001b[0;34m(self, node)\u001b[0m\n\u001b[1;32m    519\u001b[0m                 \u001b[0;31m# e.g. dt.round, rather than round\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    520\u001b[0m                 \u001b[0mattr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mprev_attr\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'.'\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mattr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 521\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcreate_local_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mattr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mprev_obj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mCall\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    522\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    523\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgeneric_enter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36mcreate_local_call\u001b[0;34m(self, name, prev_obj, cls, func_args, func_kwargs)\u001b[0m\n\u001b[1;32m    489\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    490\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misclass\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlocal_func\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0missubclass\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlocal_func\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mException\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 491\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mlocal_func\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    492\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    493\u001b[0m         return cls(\n\n\u001b[0;31mNotImplementedError\u001b[0m: \n"}]},{"category":"Datetime properties","name":"dt.hour","fast grouped":"\u2705","postgresql":"\u2705","note":"SQL returns a float.","expr_frame":"_.x.dt.hour","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">hour<\/span><span class=\"p\">)<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>1<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>2<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>3<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>4<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x  result\n0  a 2019-01-01 01:01:01       1\n1  a 2020-04-08 02:02:02       2\n2  b 2021-07-15 03:03:03       3\n3  b 2022-10-22 04:04:04       4\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">hour<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, EXTRACT(hour FROM some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, EXTRACT(hour FROM some_table.x) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">hour<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, EXTRACT(hour FROM some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, EXTRACT(hour FROM some_table.x) AS result \nFROM some_table\n"}]},{"category":"Datetime properties","name":"dt.is_leap_year","fast grouped":"\u2705","postgresql":"\u274c","note":"","expr_frame":"_.x.dt.is_leap_year","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">is_leap_year<\/span><span class=\"p\">)<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>False<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x  result\n0  a 2019-01-01 01:01:01   False\n1  a 2020-04-08 02:02:02    True\n2  b 2021-07-15 03:03:03   False\n3  b 2022-10-22 04:04:04   False\n"}]},{"category":"Datetime properties","name":"dt.is_month_end","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.dt.is_month_end","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">is_month_end<\/span><span class=\"p\">)<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>False<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x  result\n0  a 2019-01-01 01:01:01   False\n1  a 2020-04-08 02:02:02   False\n2  b 2021-07-15 03:03:03   False\n3  b 2022-10-22 04:04:04   False\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">is_month_end<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, date_trunc('day', some_table.x) = date_trunc('month', some_table.x) + interval '1 month - 1 day' AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, date_trunc('day', some_table.x) = date_trunc('month', some_table.x) + interval '1 month - 1 day' AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">is_month_end<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, date_trunc('day', some_table.x) = date_trunc('month', some_table.x) + interval '1 month - 1 day' AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, date_trunc('day', some_table.x) = date_trunc('month', some_table.x) + interval '1 month - 1 day' AS result \nFROM some_table\n"}]},{"category":"Datetime properties","name":"dt.is_month_start","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.dt.is_month_start","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">is_month_start<\/span><span class=\"p\">)<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>False<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x  result\n0  a 2019-01-01 01:01:01    True\n1  a 2020-04-08 02:02:02   False\n2  b 2021-07-15 03:03:03   False\n3  b 2022-10-22 04:04:04   False\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">is_month_start<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, date_trunc('day', some_table.x) = date_trunc('month', some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, date_trunc('day', some_table.x) = date_trunc('month', some_table.x) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">is_month_start<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, date_trunc('day', some_table.x) = date_trunc('month', some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, date_trunc('day', some_table.x) = date_trunc('month', some_table.x) AS result \nFROM some_table\n"}]},{"category":"Datetime properties","name":"dt.is_quarter_end","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.dt.is_quarter_end","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">is_quarter_end<\/span><span class=\"p\">)<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>False<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x  result\n0  a 2019-01-01 01:01:01   False\n1  a 2020-04-08 02:02:02   False\n2  b 2021-07-15 03:03:03   False\n3  b 2022-10-22 04:04:04   False\n"}]},{"category":"Datetime properties","name":"dt.is_quarter_start","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.dt.is_quarter_start","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">is_quarter_start<\/span><span class=\"p\">)<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>False<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x  result\n0  a 2019-01-01 01:01:01    True\n1  a 2020-04-08 02:02:02   False\n2  b 2021-07-15 03:03:03   False\n3  b 2022-10-22 04:04:04   False\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">is_quarter_start<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, date_trunc('day', some_table.x) = date_trunc('quarter', some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, date_trunc('day', some_table.x) = date_trunc('quarter', some_table.x) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">is_quarter_start<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, date_trunc('day', some_table.x) = date_trunc('quarter', some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, date_trunc('day', some_table.x) = date_trunc('quarter', some_table.x) AS result \nFROM some_table\n"}]},{"category":"Datetime properties","name":"dt.is_year_end","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.dt.is_year_end","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">is_year_end<\/span><span class=\"p\">)<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>False<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x  result\n0  a 2019-01-01 01:01:01   False\n1  a 2020-04-08 02:02:02   False\n2  b 2021-07-15 03:03:03   False\n3  b 2022-10-22 04:04:04   False\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">is_year_end<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, date_trunc('day', some_table.x) = date_trunc('year', some_table.x) + interval '1 year - 1 day' AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, date_trunc('day', some_table.x) = date_trunc('year', some_table.x) + interval '1 year - 1 day' AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">is_year_end<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, date_trunc('day', some_table.x) = date_trunc('year', some_table.x) + interval '1 year - 1 day' AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, date_trunc('day', some_table.x) = date_trunc('year', some_table.x) + interval '1 year - 1 day' AS result \nFROM some_table\n"}]},{"category":"Datetime properties","name":"dt.is_year_start","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.dt.is_year_start","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">is_year_start<\/span><span class=\"p\">)<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>False<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x  result\n0  a 2019-01-01 01:01:01    True\n1  a 2020-04-08 02:02:02   False\n2  b 2021-07-15 03:03:03   False\n3  b 2022-10-22 04:04:04   False\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">is_year_start<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, date_trunc('day', some_table.x) = date_trunc('year', some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, date_trunc('day', some_table.x) = date_trunc('year', some_table.x) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">is_year_start<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, date_trunc('day', some_table.x) = date_trunc('year', some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, date_trunc('day', some_table.x) = date_trunc('year', some_table.x) AS result \nFROM some_table\n"}]},{"category":"Datetime properties","name":"dt.microsecond","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"SQL returns a float.","expr_frame":"_.x.dt.microsecond","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">microsecond<\/span><span class=\"p\">)<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>0<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>0<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>0<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>0<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x  result\n0  a 2019-01-01 01:01:01       0\n1  a 2020-04-08 02:02:02       0\n2  b 2021-07-15 03:03:03       0\n3  b 2022-10-22 04:04:04       0\n"}]},{"category":"Datetime properties","name":"dt.minute","fast grouped":"\u2705","postgresql":"\u2705","note":"SQL returns a float.","expr_frame":"_.x.dt.minute","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">minute<\/span><span class=\"p\">)<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>1<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>2<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>3<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>4<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x  result\n0  a 2019-01-01 01:01:01       1\n1  a 2020-04-08 02:02:02       2\n2  b 2021-07-15 03:03:03       3\n3  b 2022-10-22 04:04:04       4\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">minute<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, EXTRACT(minute FROM some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, EXTRACT(minute FROM some_table.x) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">minute<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, EXTRACT(minute FROM some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, EXTRACT(minute FROM some_table.x) AS result \nFROM some_table\n"}]},{"category":"Datetime properties","name":"dt.month","fast grouped":"\u2705","postgresql":"\u2705","note":"SQL returns a float.","expr_frame":"_.x.dt.month","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">month<\/span><span class=\"p\">)<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>1<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>4<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>7<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>10<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x  result\n0  a 2019-01-01 01:01:01       1\n1  a 2020-04-08 02:02:02       4\n2  b 2021-07-15 03:03:03       7\n3  b 2022-10-22 04:04:04      10\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">month<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, EXTRACT(month FROM some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, EXTRACT(month FROM some_table.x) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">month<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, EXTRACT(month FROM some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, EXTRACT(month FROM some_table.x) AS result \nFROM some_table\n"}]},{"category":"Datetime properties","name":"dt.nanosecond","fast grouped":"\u2705","postgresql":"\u274c","note":"","expr_frame":"_.x.dt.nanosecond","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">nanosecond<\/span><span class=\"p\">)<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>0<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>0<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>0<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>0<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x  result\n0  a 2019-01-01 01:01:01       0\n1  a 2020-04-08 02:02:02       0\n2  b 2021-07-15 03:03:03       0\n3  b 2022-10-22 04:04:04       0\n"}]},{"category":"Datetime properties","name":"dt.quarter","fast grouped":"\u2705","postgresql":"\u2705","note":"SQL returns a float.","expr_frame":"_.x.dt.quarter","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">quarter<\/span><span class=\"p\">)<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>1<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>2<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>3<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>4<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x  result\n0  a 2019-01-01 01:01:01       1\n1  a 2020-04-08 02:02:02       2\n2  b 2021-07-15 03:03:03       3\n3  b 2022-10-22 04:04:04       4\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">quarter<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, EXTRACT(quarter FROM some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, EXTRACT(quarter FROM some_table.x) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">quarter<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, EXTRACT(quarter FROM some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, EXTRACT(quarter FROM some_table.x) AS result \nFROM some_table\n"}]},{"category":"Datetime properties","name":"dt.second","fast grouped":"\u2705","postgresql":"\u2705","note":"SQL returns a float.","expr_frame":"_.x.dt.second","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">second<\/span><span class=\"p\">)<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>1<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>2<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>3<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>4<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x  result\n0  a 2019-01-01 01:01:01       1\n1  a 2020-04-08 02:02:02       2\n2  b 2021-07-15 03:03:03       3\n3  b 2022-10-22 04:04:04       4\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">second<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, EXTRACT(second FROM some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, EXTRACT(second FROM some_table.x) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">second<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, EXTRACT(second FROM some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, EXTRACT(second FROM some_table.x) AS result \nFROM some_table\n"}]},{"category":"Datetime properties","name":"dt.time","fast grouped":"\u2705","postgresql":"\u274c","note":"","expr_frame":"_.x.dt.time","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">time<\/span><span class=\"p\">)<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>01:01:01<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>02:02:02<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>03:03:03<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>04:04:04<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x    result\n0  a 2019-01-01 01:01:01  01:01:01\n1  a 2020-04-08 02:02:02  02:02:02\n2  b 2021-07-15 03:03:03  03:03:03\n3  b 2022-10-22 04:04:04  04:04:04\n"}]},{"category":"Datetime properties","name":"dt.timetz","fast grouped":"\u2705","postgresql":"\u274c","note":"","expr_frame":"_.x.dt.timetz","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">timetz<\/span><span class=\"p\">)<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>01:01:01<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>02:02:02<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>03:03:03<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>04:04:04<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x    result\n0  a 2019-01-01 01:01:01  01:01:01\n1  a 2020-04-08 02:02:02  02:02:02\n2  b 2021-07-15 03:03:03  03:03:03\n3  b 2022-10-22 04:04:04  04:04:04\n"}]},{"category":"Datetime properties","name":"dt.tz","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.dt.tz","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">tz<\/span><span class=\"p\">)<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>None<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>None<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>None<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>None<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x result\n0  a 2019-01-01 01:01:01   None\n1  a 2020-04-08 02:02:02   None\n2  b 2021-07-15 03:03:03   None\n3  b 2022-10-22 04:04:04   None\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">tz<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mNotImplementedError\u001b[0m                       Traceback (most recent call last)\n\u001b[0;32m<ipython-input-1-6b71c250ce8a>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mtbl\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mLazyTbl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"some_table\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m\"g\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"x\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"y\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mquery\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtbl\u001b[0m \u001b[0;34m>>\u001b[0m \u001b[0mmutate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0m_\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtz\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>>\u001b[0m \u001b[0mshow_query\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/dply\/verbs.py\u001b[0m in \u001b[0;36m__rrshift__\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m     74\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mPipeable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcalls\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcalls\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     75\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 76\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     77\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     78\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__call__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/dply\/verbs.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m     79\u001b[0m         \u001b[0mres\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     80\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mf\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcalls\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 81\u001b[0;31m             \u001b[0mres\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mres\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     82\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mres\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     83\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m    184\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    185\u001b[0m         \u001b[0;31m# in normal case, get method to call, and then call it\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 186\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minst\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mrest\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    187\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    188\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mstaticmethod\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/.pyenv\/versions\/3.6.8\/lib\/python3.6\/functools.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kw)\u001b[0m\n\u001b[1;32m    805\u001b[0m                             '1 positional argument')\n\u001b[1;32m    806\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 807\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mdispatch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__class__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    808\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    809\u001b[0m     \u001b[0mfuncname\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'__name__'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'singledispatch function'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/sql\/verbs.py\u001b[0m in \u001b[0;36m_mutate\u001b[0;34m(__data, **kwargs)\u001b[0m\n\u001b[1;32m    485\u001b[0m         \u001b[0;31m# need to use inner cols, since sel.columns uses ColumnClause, not Label\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    486\u001b[0m         \u001b[0mlabs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mk\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mv\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mlift_inner_cols\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mv\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msql\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0melements\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mLabel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 487\u001b[0;31m         \u001b[0mnew_call\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m__data\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverb_name\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"Mutate\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0marg_name\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcolname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    488\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    489\u001b[0m         \u001b[0msel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_mutate_select\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnew_call\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m__data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/sql\/verbs.py\u001b[0m in \u001b[0;36mshape_call\u001b[0;34m(self, call, window, str_accessors, verb_name, arg_name)\u001b[0m\n\u001b[1;32m    253\u001b[0m         \u001b[0;31m# raise informative error message if missing translation\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    254\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 255\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mcall_shaper\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0menter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcall\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    256\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mFunctionLookupError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    257\u001b[0m             raise SqlFunctionLookupError.from_verb(\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36menter\u001b[0;34m(self, node)\u001b[0m\n\u001b[1;32m    507\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcreate_local_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mCall\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    508\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 509\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0menter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    510\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    511\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0menter___getattr__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36menter\u001b[0;34m(self, node)\u001b[0m\n\u001b[1;32m    404\u001b[0m         \u001b[0mf_enter\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgeneric_enter\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    405\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 406\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mf_enter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    407\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    408\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mexit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36menter___getattr__\u001b[0;34m(self, node)\u001b[0m\n\u001b[1;32m    519\u001b[0m                 \u001b[0;31m# e.g. dt.round, rather than round\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    520\u001b[0m                 \u001b[0mattr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mprev_attr\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'.'\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mattr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 521\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcreate_local_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mattr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mprev_obj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mCall\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    522\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    523\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgeneric_enter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36mcreate_local_call\u001b[0;34m(self, name, prev_obj, cls, func_args, func_kwargs)\u001b[0m\n\u001b[1;32m    489\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    490\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misclass\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlocal_func\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0missubclass\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlocal_func\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mException\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 491\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mlocal_func\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    492\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    493\u001b[0m         return cls(\n\n\u001b[0;31mNotImplementedError\u001b[0m: \n<\/pre>","printed":"\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mNotImplementedError\u001b[0m                       Traceback (most recent call last)\n\u001b[0;32m<ipython-input-1-6b71c250ce8a>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mtbl\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mLazyTbl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"some_table\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m\"g\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"x\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"y\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mquery\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtbl\u001b[0m \u001b[0;34m>>\u001b[0m \u001b[0mmutate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0m_\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtz\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>>\u001b[0m \u001b[0mshow_query\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/dply\/verbs.py\u001b[0m in \u001b[0;36m__rrshift__\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m     74\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mPipeable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcalls\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcalls\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     75\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 76\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     77\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     78\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__call__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/dply\/verbs.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m     79\u001b[0m         \u001b[0mres\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     80\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mf\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcalls\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 81\u001b[0;31m             \u001b[0mres\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mres\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     82\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mres\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     83\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m    184\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    185\u001b[0m         \u001b[0;31m# in normal case, get method to call, and then call it\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 186\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minst\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mrest\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    187\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    188\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mstaticmethod\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/.pyenv\/versions\/3.6.8\/lib\/python3.6\/functools.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kw)\u001b[0m\n\u001b[1;32m    805\u001b[0m                             '1 positional argument')\n\u001b[1;32m    806\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 807\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mdispatch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__class__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    808\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    809\u001b[0m     \u001b[0mfuncname\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'__name__'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'singledispatch function'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/sql\/verbs.py\u001b[0m in \u001b[0;36m_mutate\u001b[0;34m(__data, **kwargs)\u001b[0m\n\u001b[1;32m    485\u001b[0m         \u001b[0;31m# need to use inner cols, since sel.columns uses ColumnClause, not Label\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    486\u001b[0m         \u001b[0mlabs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mk\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mv\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mlift_inner_cols\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mv\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msql\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0melements\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mLabel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 487\u001b[0;31m         \u001b[0mnew_call\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m__data\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverb_name\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"Mutate\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0marg_name\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcolname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    488\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    489\u001b[0m         \u001b[0msel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_mutate_select\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnew_call\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m__data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/sql\/verbs.py\u001b[0m in \u001b[0;36mshape_call\u001b[0;34m(self, call, window, str_accessors, verb_name, arg_name)\u001b[0m\n\u001b[1;32m    253\u001b[0m         \u001b[0;31m# raise informative error message if missing translation\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    254\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 255\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mcall_shaper\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0menter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcall\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    256\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mFunctionLookupError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    257\u001b[0m             raise SqlFunctionLookupError.from_verb(\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36menter\u001b[0;34m(self, node)\u001b[0m\n\u001b[1;32m    507\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcreate_local_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mCall\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    508\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 509\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0menter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    510\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    511\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0menter___getattr__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36menter\u001b[0;34m(self, node)\u001b[0m\n\u001b[1;32m    404\u001b[0m         \u001b[0mf_enter\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgeneric_enter\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    405\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 406\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mf_enter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    407\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    408\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mexit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36menter___getattr__\u001b[0;34m(self, node)\u001b[0m\n\u001b[1;32m    519\u001b[0m                 \u001b[0;31m# e.g. dt.round, rather than round\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    520\u001b[0m                 \u001b[0mattr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mprev_attr\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'.'\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mattr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 521\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcreate_local_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mattr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mprev_obj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mCall\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    522\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    523\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgeneric_enter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36mcreate_local_call\u001b[0;34m(self, name, prev_obj, cls, func_args, func_kwargs)\u001b[0m\n\u001b[1;32m    489\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    490\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misclass\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlocal_func\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0missubclass\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlocal_func\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mException\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 491\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mlocal_func\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    492\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    493\u001b[0m         return cls(\n\n\u001b[0;31mNotImplementedError\u001b[0m: \n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">tz<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mNotImplementedError\u001b[0m                       Traceback (most recent call last)\n\u001b[0;32m<ipython-input-1-a16ab8345538>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0msiuba\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mgroup_by\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mquery\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtbl\u001b[0m \u001b[0;34m>>\u001b[0m \u001b[0mgroup_by\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mg\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>>\u001b[0m \u001b[0mmutate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0m_\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtz\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>>\u001b[0m \u001b[0mshow_query\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/dply\/verbs.py\u001b[0m in \u001b[0;36m__rrshift__\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m     74\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mPipeable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcalls\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcalls\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     75\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 76\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     77\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     78\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__call__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/dply\/verbs.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m     79\u001b[0m         \u001b[0mres\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     80\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mf\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcalls\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 81\u001b[0;31m             \u001b[0mres\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mres\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     82\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mres\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     83\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m    184\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    185\u001b[0m         \u001b[0;31m# in normal case, get method to call, and then call it\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 186\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minst\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mrest\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    187\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    188\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mstaticmethod\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/.pyenv\/versions\/3.6.8\/lib\/python3.6\/functools.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kw)\u001b[0m\n\u001b[1;32m    805\u001b[0m                             '1 positional argument')\n\u001b[1;32m    806\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 807\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mdispatch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__class__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    808\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    809\u001b[0m     \u001b[0mfuncname\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'__name__'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'singledispatch function'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/sql\/verbs.py\u001b[0m in \u001b[0;36m_mutate\u001b[0;34m(__data, **kwargs)\u001b[0m\n\u001b[1;32m    485\u001b[0m         \u001b[0;31m# need to use inner cols, since sel.columns uses ColumnClause, not Label\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    486\u001b[0m         \u001b[0mlabs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mk\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mv\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mlift_inner_cols\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mv\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msql\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0melements\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mLabel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 487\u001b[0;31m         \u001b[0mnew_call\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m__data\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverb_name\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"Mutate\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0marg_name\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcolname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    488\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    489\u001b[0m         \u001b[0msel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_mutate_select\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnew_call\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m__data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/sql\/verbs.py\u001b[0m in \u001b[0;36mshape_call\u001b[0;34m(self, call, window, str_accessors, verb_name, arg_name)\u001b[0m\n\u001b[1;32m    253\u001b[0m         \u001b[0;31m# raise informative error message if missing translation\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    254\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 255\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mcall_shaper\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0menter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcall\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    256\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mFunctionLookupError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    257\u001b[0m             raise SqlFunctionLookupError.from_verb(\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36menter\u001b[0;34m(self, node)\u001b[0m\n\u001b[1;32m    507\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcreate_local_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mCall\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    508\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 509\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0menter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    510\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    511\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0menter___getattr__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36menter\u001b[0;34m(self, node)\u001b[0m\n\u001b[1;32m    404\u001b[0m         \u001b[0mf_enter\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgeneric_enter\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    405\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 406\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mf_enter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    407\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    408\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mexit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36menter___getattr__\u001b[0;34m(self, node)\u001b[0m\n\u001b[1;32m    519\u001b[0m                 \u001b[0;31m# e.g. dt.round, rather than round\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    520\u001b[0m                 \u001b[0mattr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mprev_attr\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'.'\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mattr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 521\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcreate_local_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mattr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mprev_obj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mCall\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    522\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    523\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgeneric_enter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36mcreate_local_call\u001b[0;34m(self, name, prev_obj, cls, func_args, func_kwargs)\u001b[0m\n\u001b[1;32m    489\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    490\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misclass\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlocal_func\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0missubclass\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlocal_func\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mException\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 491\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mlocal_func\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    492\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    493\u001b[0m         return cls(\n\n\u001b[0;31mNotImplementedError\u001b[0m: \n<\/pre>","printed":"\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mNotImplementedError\u001b[0m                       Traceback (most recent call last)\n\u001b[0;32m<ipython-input-1-a16ab8345538>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0msiuba\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mgroup_by\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mquery\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtbl\u001b[0m \u001b[0;34m>>\u001b[0m \u001b[0mgroup_by\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mg\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>>\u001b[0m \u001b[0mmutate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0m_\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtz\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>>\u001b[0m \u001b[0mshow_query\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/dply\/verbs.py\u001b[0m in \u001b[0;36m__rrshift__\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m     74\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mPipeable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcalls\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcalls\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     75\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 76\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     77\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     78\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__call__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/dply\/verbs.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m     79\u001b[0m         \u001b[0mres\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     80\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mf\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcalls\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 81\u001b[0;31m             \u001b[0mres\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mres\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     82\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mres\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     83\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m    184\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    185\u001b[0m         \u001b[0;31m# in normal case, get method to call, and then call it\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 186\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minst\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mrest\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    187\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    188\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mstaticmethod\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/.pyenv\/versions\/3.6.8\/lib\/python3.6\/functools.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kw)\u001b[0m\n\u001b[1;32m    805\u001b[0m                             '1 positional argument')\n\u001b[1;32m    806\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 807\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mdispatch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__class__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    808\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    809\u001b[0m     \u001b[0mfuncname\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'__name__'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'singledispatch function'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/sql\/verbs.py\u001b[0m in \u001b[0;36m_mutate\u001b[0;34m(__data, **kwargs)\u001b[0m\n\u001b[1;32m    485\u001b[0m         \u001b[0;31m# need to use inner cols, since sel.columns uses ColumnClause, not Label\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    486\u001b[0m         \u001b[0mlabs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mk\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mv\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mlift_inner_cols\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mv\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msql\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0melements\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mLabel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 487\u001b[0;31m         \u001b[0mnew_call\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m__data\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverb_name\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"Mutate\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0marg_name\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcolname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    488\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    489\u001b[0m         \u001b[0msel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_mutate_select\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnew_call\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m__data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/sql\/verbs.py\u001b[0m in \u001b[0;36mshape_call\u001b[0;34m(self, call, window, str_accessors, verb_name, arg_name)\u001b[0m\n\u001b[1;32m    253\u001b[0m         \u001b[0;31m# raise informative error message if missing translation\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    254\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 255\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mcall_shaper\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0menter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcall\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    256\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mFunctionLookupError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    257\u001b[0m             raise SqlFunctionLookupError.from_verb(\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36menter\u001b[0;34m(self, node)\u001b[0m\n\u001b[1;32m    507\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcreate_local_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mCall\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    508\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 509\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0menter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    510\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    511\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0menter___getattr__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36menter\u001b[0;34m(self, node)\u001b[0m\n\u001b[1;32m    404\u001b[0m         \u001b[0mf_enter\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgeneric_enter\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    405\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 406\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mf_enter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    407\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    408\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mexit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36menter___getattr__\u001b[0;34m(self, node)\u001b[0m\n\u001b[1;32m    519\u001b[0m                 \u001b[0;31m# e.g. dt.round, rather than round\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    520\u001b[0m                 \u001b[0mattr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mprev_attr\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'.'\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mattr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 521\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcreate_local_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mattr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mprev_obj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mCall\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    522\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    523\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgeneric_enter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~\/Dropbox\/Repo\/siuba\/siuba\/siu.py\u001b[0m in \u001b[0;36mcreate_local_call\u001b[0;34m(self, name, prev_obj, cls, func_args, func_kwargs)\u001b[0m\n\u001b[1;32m    489\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    490\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misclass\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlocal_func\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0missubclass\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlocal_func\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mException\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 491\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mlocal_func\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    492\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    493\u001b[0m         return cls(\n\n\u001b[0;31mNotImplementedError\u001b[0m: \n"}]},{"category":"Datetime properties","name":"dt.week","fast grouped":"\u2705","postgresql":"\u2705","note":"SQL returns a float.","expr_frame":"_.x.dt.week","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">week<\/span><span class=\"p\">)<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>1<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>15<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>28<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>42<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x  result\n0  a 2019-01-01 01:01:01       1\n1  a 2020-04-08 02:02:02      15\n2  b 2021-07-15 03:03:03      28\n3  b 2022-10-22 04:04:04      42\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">week<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, EXTRACT(week FROM some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, EXTRACT(week FROM some_table.x) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">week<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, EXTRACT(week FROM some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, EXTRACT(week FROM some_table.x) AS result \nFROM some_table\n"}]},{"category":"Datetime properties","name":"dt.weekday","fast grouped":"\u2705","postgresql":"\u2705","note":"SQL returns a float.","expr_frame":"_.x.dt.weekday","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">weekday<\/span><span class=\"p\">)<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>1<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>2<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>3<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>5<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x  result\n0  a 2019-01-01 01:01:01       1\n1  a 2020-04-08 02:02:02       2\n2  b 2021-07-15 03:03:03       3\n3  b 2022-10-22 04:04:04       5\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">weekday<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, CAST(CAST(EXTRACT(dow FROM some_table.x) + 6 AS INTEGER) %% 7 AS NUMERIC) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, CAST(CAST(EXTRACT(dow FROM some_table.x) + 6 AS INTEGER) %% 7 AS NUMERIC) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">weekday<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, CAST(CAST(EXTRACT(dow FROM some_table.x) + 6 AS INTEGER) %% 7 AS NUMERIC) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, CAST(CAST(EXTRACT(dow FROM some_table.x) + 6 AS INTEGER) %% 7 AS NUMERIC) AS result \nFROM some_table\n"}]},{"category":"Datetime properties","name":"dt.weekofyear","fast grouped":"\u2705","postgresql":"\u2705","note":"SQL returns a float.","expr_frame":"_.x.dt.weekofyear","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">weekofyear<\/span><span class=\"p\">)<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>1<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>15<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>28<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>42<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x  result\n0  a 2019-01-01 01:01:01       1\n1  a 2020-04-08 02:02:02      15\n2  b 2021-07-15 03:03:03      28\n3  b 2022-10-22 04:04:04      42\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">weekofyear<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, EXTRACT(week FROM some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, EXTRACT(week FROM some_table.x) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">weekofyear<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, EXTRACT(week FROM some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, EXTRACT(week FROM some_table.x) AS result \nFROM some_table\n"}]},{"category":"Datetime properties","name":"dt.year","fast grouped":"\u2705","postgresql":"\u2705","note":"SQL returns a float.","expr_frame":"_.x.dt.year","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">to_datetime<\/span><span class=\"p\">(<\/span>\n            <span class=\"p\">[<\/span>\n                <span class=\"s2\">&quot;2019-01-01 01:01:01&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2020-04-08 02:02:02&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2021-07-15 03:03:03&quot;<\/span><span class=\"p\">,<\/span>\n                <span class=\"s2\">&quot;2022-10-22 04:04:04&quot;<\/span><span class=\"p\">,<\/span>\n            <span class=\"p\">]<\/span>\n        <span class=\"p\">),<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">year<\/span><span class=\"p\">)<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>2019-01-01 01:01:01<\/td>\n      <td>2019<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>2020-04-08 02:02:02<\/td>\n      <td>2020<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>2021-07-15 03:03:03<\/td>\n      <td>2021<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>2022-10-22 04:04:04<\/td>\n      <td>2022<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g                   x  result\n0  a 2019-01-01 01:01:01    2019\n1  a 2020-04-08 02:02:02    2020\n2  b 2021-07-15 03:03:03    2021\n3  b 2022-10-22 04:04:04    2022\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">year<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, EXTRACT(year FROM some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, EXTRACT(year FROM some_table.x) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">dt<\/span><span class=\"o\">.<\/span><span class=\"n\">year<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, EXTRACT(year FROM some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, EXTRACT(year FROM some_table.x) AS result \nFROM some_table\n"}]},{"category":"Function application, groupby & window","name":"agg","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Function application, groupby & window","name":"aggregate","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Function application, groupby & window","name":"apply","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Function application, groupby & window","name":"ewm","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"decision-needed","examples":""},{"category":"Function application, groupby & window","name":"expanding","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"decision-needed","examples":""},{"category":"Function application, groupby & window","name":"groupby","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Function application, groupby & window","name":"map","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Function application, groupby & window","name":"pipe","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"decision-needed","examples":""},{"category":"Function application, groupby & window","name":"rolling","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"decision-needed","examples":""},{"category":"Function application, groupby & window","name":"transform","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Indexing, iteration","name":"at","fast grouped":"\ud83d\udea7","postgresql":"","note":"","expr_frame":"","support_category":"priority-high","examples":""},{"category":"Indexing, iteration","name":"get","fast grouped":"\ud83d\udea7","postgresql":"","note":"","expr_frame":"","support_category":"priority-high","examples":""},{"category":"Indexing, iteration","name":"iat","fast grouped":"\ud83d\udea7","postgresql":"","note":"","expr_frame":"","support_category":"priority-high","examples":""},{"category":"Indexing, iteration","name":"iloc","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"decision-needed","examples":""},{"category":"Indexing, iteration","name":"item","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Indexing, iteration","name":"items","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Indexing, iteration","name":"iteritems","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Indexing, iteration","name":"keys","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Indexing, iteration","name":"loc","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"decision-needed","examples":""},{"category":"Indexing, iteration","name":"pop","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Indexing, iteration","name":"xs","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Missing data handling","name":"dropna","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"decision-needed","examples":""},{"category":"Missing data handling","name":"fillna","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.fillna(1)","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">fillna<\/span><span class=\"p\">(<\/span><span class=\"mi\">1<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>10<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>11<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>11<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>13<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>13<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>13<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y  result\n0  a  10  1      10\n1  a  11  2      11\n2  a  11  3      11\n3  b  13  4      13\n4  b  13  5      13\n5  b  13  6      13\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">fillna<\/span><span class=\"p\">(<\/span><span class=\"mi\">1<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, coalesce(some_table.x, 1) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, coalesce(some_table.x, 1) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">fillna<\/span><span class=\"p\">(<\/span><span class=\"mi\">1<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, coalesce(some_table.x, 1) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, coalesce(some_table.x, 1) AS result \nFROM some_table\n"}]},{"category":"Missing data handling","name":"interpolate","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"decision-needed","examples":""},{"category":"Missing data handling","name":"isna","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.isna()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">isna<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>False<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y  result\n0  a  10  1   False\n1  a  11  2   False\n2  a  11  3   False\n3  b  13  4   False\n4  b  13  5   False\n5  b  13  6   False\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">isna<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x IS NULL AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x IS NULL AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">isna<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x IS NULL AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x IS NULL AS result \nFROM some_table\n"}]},{"category":"Missing data handling","name":"notna","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.notna()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">notna<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>True<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y  result\n0  a  10  1    True\n1  a  11  2    True\n2  a  11  3    True\n3  b  13  4    True\n4  b  13  5    True\n5  b  13  6    True\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">notna<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x IS NOT NULL AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x IS NOT NULL AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">notna<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x IS NOT NULL AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x IS NOT NULL AS result \nFROM some_table\n"}]},{"category":"Plotting","name":"hist","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Plotting","name":"plot","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Plotting","name":"plot.area","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Plotting","name":"plot.bar","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Plotting","name":"plot.barh","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Plotting","name":"plot.box","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Plotting","name":"plot.density","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Plotting","name":"plot.hist","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Plotting","name":"plot.kde","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Plotting","name":"plot.line","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Plotting","name":"plot.pie","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Reindexing \/ selection \/ label manipulation","name":"add_prefix","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"index","examples":""},{"category":"Reindexing \/ selection \/ label manipulation","name":"add_suffix","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"index","examples":""},{"category":"Reindexing \/ selection \/ label manipulation","name":"align","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"index","examples":""},{"category":"Reindexing \/ selection \/ label manipulation","name":"drop","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"index","examples":""},{"category":"Reindexing \/ selection \/ label manipulation","name":"droplevel","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"index","examples":""},{"category":"Reindexing \/ selection \/ label manipulation","name":"duplicated","fast grouped":"\ud83d\udea7","postgresql":"","note":"","expr_frame":"","support_category":"priority-high","examples":""},{"category":"Reindexing \/ selection \/ label manipulation","name":"equals","fast grouped":"\ud83d\udea7","postgresql":"","note":"","expr_frame":"","support_category":"priority-high","examples":""},{"category":"Reindexing \/ selection \/ label manipulation","name":"filter","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"index","examples":""},{"category":"Reindexing \/ selection \/ label manipulation","name":"isin","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.isin((1, 2))","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">(<\/span>\n    <span class=\"p\">{<\/span>\n        <span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">10<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">11<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">,<\/span> <span class=\"mi\">13<\/span><span class=\"p\">],<\/span>\n        <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"mi\">3<\/span><span class=\"p\">,<\/span> <span class=\"mi\">4<\/span><span class=\"p\">,<\/span> <span class=\"mi\">5<\/span><span class=\"p\">,<\/span> <span class=\"mi\">6<\/span><span class=\"p\">],<\/span>\n    <span class=\"p\">}<\/span>\n<span class=\"p\">)<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">isin<\/span><span class=\"p\">((<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">)))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>10<\/td>\n      <td>1<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>2<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>a<\/td>\n      <td>11<\/td>\n      <td>3<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>4<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>4<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>5<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>5<\/th>\n      <td>b<\/td>\n      <td>13<\/td>\n      <td>6<\/td>\n      <td>False<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g   x  y  result\n0  a  10  1   False\n1  a  11  2   False\n2  a  11  3   False\n3  b  13  4   False\n4  b  13  5   False\n5  b  13  6   False\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">isin<\/span><span class=\"p\">((<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">)))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x IN (1, 2) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x IN (1, 2) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">isin<\/span><span class=\"p\">((<\/span><span class=\"mi\">1<\/span><span class=\"p\">,<\/span> <span class=\"mi\">2<\/span><span class=\"p\">)))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x IN (1, 2) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x IN (1, 2) AS result \nFROM some_table\n"}]},{"category":"Reindexing \/ selection \/ label manipulation","name":"mask","fast grouped":"\ud83d\udea7","postgresql":"","note":"","expr_frame":"","support_category":"priority-medium","examples":""},{"category":"Reindexing \/ selection \/ label manipulation","name":"reindex","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"index","examples":""},{"category":"Reindexing \/ selection \/ label manipulation","name":"reindex_like","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"index","examples":""},{"category":"Reindexing \/ selection \/ label manipulation","name":"rename_axis","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"index","examples":""},{"category":"Reindexing \/ selection \/ label manipulation","name":"reset_index","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"index","examples":""},{"category":"Reindexing \/ selection \/ label manipulation","name":"set_axis","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"index","examples":""},{"category":"Reindexing \/ selection \/ label manipulation","name":"take","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Reindexing \/ selection \/ label manipulation","name":"truncate","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Reindexing \/ selection \/ label manipulation","name":"where","fast grouped":"\ud83d\udea7","postgresql":"","note":"","expr_frame":"","support_category":"priority-medium","examples":""},{"category":"Reshaping, sorting","name":"argmax","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"deprecated","examples":""},{"category":"Reshaping, sorting","name":"argmin","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"deprecated","examples":""},{"category":"Reshaping, sorting","name":"argsort","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Reshaping, sorting","name":"explode","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"decision-needed","examples":""},{"category":"Reshaping, sorting","name":"ravel","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Reshaping, sorting","name":"reorder_levels","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"index","examples":""},{"category":"Reshaping, sorting","name":"repeat","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"decision-needed","examples":""},{"category":"Reshaping, sorting","name":"searchsorted","fast grouped":"\ud83d\udea7","postgresql":"","note":"","expr_frame":"","support_category":"priority-medium","examples":""},{"category":"Reshaping, sorting","name":"sort_index","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"index","examples":""},{"category":"Reshaping, sorting","name":"squeeze","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Reshaping, sorting","name":"swaplevel","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"index","examples":""},{"category":"Reshaping, sorting","name":"unstack","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"index","examples":""},{"category":"Reshaping, sorting","name":"view","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Serialization \/ IO \/ conversion","name":"to_dense","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"deprecated","examples":""},{"category":"Serialization \/ IO \/ conversion","name":"to_msgpack","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"deprecated","examples":""},{"category":"Time series-related","name":"asfreq","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"decision-needed","examples":""},{"category":"Timedelta methods","name":"cat.codes","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Timedelta methods","name":"dt.to_pytimedelta","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"non series array","examples":""},{"category":"Timedelta methods","name":"sparse","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Timedelta methods","name":"sparse.from_coo","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Timedelta methods","name":"sparse.sp_values","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Timedelta methods","name":"sparse.to_coo","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"no support","examples":""},{"category":"Timedelta methods","name":"str.capitalize","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.str.capitalize()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">capitalize<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>Abc<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>Cde<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>Fg<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>H<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x result\n0  a  abc    Abc\n1  a  cde    Cde\n2  b   fg     Fg\n3  b    h      H\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">capitalize<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, upper(left(some_table.x, 1)) || right(some_table.x, length(some_table.x) - 1) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, upper(left(some_table.x, 1)) || right(some_table.x, length(some_table.x) - 1) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">capitalize<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, upper(left(some_table.x, 1)) || right(some_table.x, length(some_table.x) - 1) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, upper(left(some_table.x, 1)) || right(some_table.x, length(some_table.x) - 1) AS result \nFROM some_table\n"}]},{"category":"Timedelta methods","name":"str.casefold","fast grouped":"\ud83d\udea7","postgresql":"","note":"","expr_frame":"","support_category":"priority-medium","examples":""},{"category":"Timedelta methods","name":"str.cat","fast grouped":"\ud83d\udea7","postgresql":"","note":"","expr_frame":"","support_category":"priority-medium","examples":""},{"category":"Timedelta methods","name":"str.center","fast grouped":"\u2705","postgresql":"\u274c","note":"","expr_frame":"_.x.str.center(3)","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">center<\/span><span class=\"p\">(<\/span><span class=\"mi\">3<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>abc<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>cde<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>fg<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>h<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x result\n0  a  abc    abc\n1  a  cde    cde\n2  b   fg     fg\n3  b    h     h \n"}]},{"category":"Timedelta methods","name":"str.contains","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.str.contains('a')","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">contains<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>False<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x  result\n0  a  abc    True\n1  a  cde   False\n2  b   fg   False\n3  b    h   False\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">contains<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x ~ 'a' AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x ~ 'a' AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">contains<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, some_table.x ~ 'a' AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, some_table.x ~ 'a' AS result \nFROM some_table\n"}]},{"category":"Timedelta methods","name":"str.count","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.str.count('a')","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">count<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>1<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>0<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>0<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>0<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x  result\n0  a  abc       1\n1  a  cde       0\n2  b   fg       0\n3  b    h       0\n"}]},{"category":"Timedelta methods","name":"str.decode","fast grouped":"\ud83d\udea7","postgresql":"","note":"","expr_frame":"","support_category":"priority-medium","examples":""},{"category":"Timedelta methods","name":"str.encode","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.str.encode('utf-8')","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">encode<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;utf-8&quot;<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>b'abc'<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>b'cde'<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>b'fg'<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>b'h'<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x  result\n0  a  abc  b'abc'\n1  a  cde  b'cde'\n2  b   fg   b'fg'\n3  b    h    b'h'\n"}]},{"category":"Timedelta methods","name":"str.endswith","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.str.endswith('a|b')","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">endswith<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;a|b&quot;<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>False<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x  result\n0  a  abc   False\n1  a  cde   False\n2  b   fg   False\n3  b    h   False\n"}]},{"category":"Timedelta methods","name":"str.find","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.str.find('a|c')","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">find<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;a|c&quot;<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>-1<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>-1<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>-1<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>-1<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x  result\n0  a  abc      -1\n1  a  cde      -1\n2  b   fg      -1\n3  b    h      -1\n"}]},{"category":"Timedelta methods","name":"str.findall","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.str.findall('a|c')","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">findall<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;a|c&quot;<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>[a, c]<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>[c]<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>[]<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>[]<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x  result\n0  a  abc  [a, c]\n1  a  cde     [c]\n2  b   fg      []\n3  b    h      []\n"}]},{"category":"Timedelta methods","name":"str.get","fast grouped":"\ud83d\udea7","postgresql":"","note":"","expr_frame":"","support_category":"priority-medium","examples":""},{"category":"Timedelta methods","name":"str.get_dummies","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"DataFrame","examples":""},{"category":"Timedelta methods","name":"str.index","fast grouped":"\ud83d\udea7","postgresql":"","note":"","expr_frame":"","support_category":"priority-medium","examples":""},{"category":"Timedelta methods","name":"str.isalnum","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.str.isalnum()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">isalnum<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>True<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x  result\n0  a  abc    True\n1  a  cde    True\n2  b   fg    True\n3  b    h    True\n"}]},{"category":"Timedelta methods","name":"str.isalpha","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.str.isalpha()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">isalpha<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>True<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x  result\n0  a  abc    True\n1  a  cde    True\n2  b   fg    True\n3  b    h    True\n"}]},{"category":"Timedelta methods","name":"str.isdecimal","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.str.isdecimal()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">isdecimal<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>False<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x  result\n0  a  abc   False\n1  a  cde   False\n2  b   fg   False\n3  b    h   False\n"}]},{"category":"Timedelta methods","name":"str.isdigit","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.str.isdigit()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">isdigit<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>False<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x  result\n0  a  abc   False\n1  a  cde   False\n2  b   fg   False\n3  b    h   False\n"}]},{"category":"Timedelta methods","name":"str.islower","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.str.islower()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">islower<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>True<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x  result\n0  a  abc    True\n1  a  cde    True\n2  b   fg    True\n3  b    h    True\n"}]},{"category":"Timedelta methods","name":"str.isnumeric","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.str.isnumeric()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">isnumeric<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>False<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x  result\n0  a  abc   False\n1  a  cde   False\n2  b   fg   False\n3  b    h   False\n"}]},{"category":"Timedelta methods","name":"str.isspace","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.str.isspace()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">isspace<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>False<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x  result\n0  a  abc   False\n1  a  cde   False\n2  b   fg   False\n3  b    h   False\n"}]},{"category":"Timedelta methods","name":"str.istitle","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.str.istitle()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">istitle<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>False<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x  result\n0  a  abc   False\n1  a  cde   False\n2  b   fg   False\n3  b    h   False\n"}]},{"category":"Timedelta methods","name":"str.isupper","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.str.isupper()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">isupper<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>False<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x  result\n0  a  abc   False\n1  a  cde   False\n2  b   fg   False\n3  b    h   False\n"}]},{"category":"Timedelta methods","name":"str.join","fast grouped":"\ud83d\udea7","postgresql":"","note":"","expr_frame":"","support_category":"priority-medium","examples":""},{"category":"Timedelta methods","name":"str.len","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.str.len()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">len<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>3<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>3<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>2<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>1<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x  result\n0  a  abc       3\n1  a  cde       3\n2  b   fg       2\n3  b    h       1\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">len<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, length(some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, length(some_table.x) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">len<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, length(some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, length(some_table.x) AS result \nFROM some_table\n"}]},{"category":"Timedelta methods","name":"str.ljust","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.str.ljust(5)","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">ljust<\/span><span class=\"p\">(<\/span><span class=\"mi\">5<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>abc<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>cde<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>fg<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>h<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x result\n0  a  abc  abc  \n1  a  cde  cde  \n2  b   fg  fg   \n3  b    h  h    \n"}]},{"category":"Timedelta methods","name":"str.lower","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.str.lower()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">lower<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>abc<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>cde<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>fg<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>h<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x result\n0  a  abc    abc\n1  a  cde    cde\n2  b   fg     fg\n3  b    h      h\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">lower<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, lower(some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, lower(some_table.x) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">lower<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, lower(some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, lower(some_table.x) AS result \nFROM some_table\n"}]},{"category":"Timedelta methods","name":"str.lstrip","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.str.lstrip()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">lstrip<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>abc<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>cde<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>fg<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>h<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x result\n0  a  abc    abc\n1  a  cde    cde\n2  b   fg     fg\n3  b    h      h\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">lstrip<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, ltrim(some_table.x, ' \t\n\u000b\f\r') AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, ltrim(some_table.x, ' \t\n\u000b\f\r') AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">lstrip<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, ltrim(some_table.x, ' \t\n\u000b\f\r') AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, ltrim(some_table.x, ' \t\n\u000b\f\r') AS result \nFROM some_table\n"}]},{"category":"Timedelta methods","name":"str.match","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.str.match('a|c')","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">match<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;a|c&quot;<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>True<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>False<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x  result\n0  a  abc    True\n1  a  cde    True\n2  b   fg   False\n3  b    h   False\n"}]},{"category":"Timedelta methods","name":"str.normalize","fast grouped":"\ud83d\udea7","postgresql":"","note":"","expr_frame":"","support_category":"priority-medium","examples":""},{"category":"Timedelta methods","name":"str.pad","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.str.pad(5)","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">pad<\/span><span class=\"p\">(<\/span><span class=\"mi\">5<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>abc<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>cde<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>fg<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>h<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x result\n0  a  abc    abc\n1  a  cde    cde\n2  b   fg     fg\n3  b    h      h\n"}]},{"category":"Timedelta methods","name":"str.partition","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"DataFrame","examples":""},{"category":"Timedelta methods","name":"str.repeat","fast grouped":"\ud83d\udea7","postgresql":"","note":"","expr_frame":"","support_category":"priority-medium","examples":""},{"category":"Timedelta methods","name":"str.replace","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.str.replace('a|b','c')","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">replace<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;a|b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;c&quot;<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>ccc<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>cde<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>fg<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>h<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x result\n0  a  abc    ccc\n1  a  cde    cde\n2  b   fg     fg\n3  b    h      h\n"}]},{"category":"Timedelta methods","name":"str.rfind","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.str.rfind('a')","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">rfind<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>0<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>-1<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>-1<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>-1<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x  result\n0  a  abc       0\n1  a  cde      -1\n2  b   fg      -1\n3  b    h      -1\n"}]},{"category":"Timedelta methods","name":"str.rindex","fast grouped":"\ud83d\udea7","postgresql":"","note":"","expr_frame":"","support_category":"priority-medium","examples":""},{"category":"Timedelta methods","name":"str.rjust","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.str.rjust(5)","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">rjust<\/span><span class=\"p\">(<\/span><span class=\"mi\">5<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>abc<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>cde<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>fg<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>h<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x result\n0  a  abc    abc\n1  a  cde    cde\n2  b   fg     fg\n3  b    h      h\n"}]},{"category":"Timedelta methods","name":"str.rpartition","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"DataFrame","examples":""},{"category":"Timedelta methods","name":"str.rsplit","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.str.rsplit('a|b',n = 1)","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">rsplit<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;a|b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"n\">n<\/span><span class=\"o\">=<\/span><span class=\"mi\">1<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>[abc]<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>[cde]<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>[fg]<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>[h]<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x result\n0  a  abc  [abc]\n1  a  cde  [cde]\n2  b   fg   [fg]\n3  b    h    [h]\n"}]},{"category":"Timedelta methods","name":"str.rstrip","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.str.rstrip()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">rstrip<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>abc<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>cde<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>fg<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>h<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x result\n0  a  abc    abc\n1  a  cde    cde\n2  b   fg     fg\n3  b    h      h\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">rstrip<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, rtrim(some_table.x, ' \t\n\u000b\f\r') AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, rtrim(some_table.x, ' \t\n\u000b\f\r') AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">rstrip<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, rtrim(some_table.x, ' \t\n\u000b\f\r') AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, rtrim(some_table.x, ' \t\n\u000b\f\r') AS result \nFROM some_table\n"}]},{"category":"Timedelta methods","name":"str.slice","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.str.slice(step = 2)","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">slice<\/span><span class=\"p\">(<\/span><span class=\"n\">step<\/span><span class=\"o\">=<\/span><span class=\"mi\">2<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>ac<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>ce<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>f<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>h<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x result\n0  a  abc     ac\n1  a  cde     ce\n2  b   fg      f\n3  b    h      h\n"}]},{"category":"Timedelta methods","name":"str.slice_replace","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.str.slice_replace(2,repl = 'x')","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">slice_replace<\/span><span class=\"p\">(<\/span><span class=\"mi\">2<\/span><span class=\"p\">,<\/span> <span class=\"n\">repl<\/span><span class=\"o\">=<\/span><span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>abx<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>cdx<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>fgx<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>hx<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x result\n0  a  abc    abx\n1  a  cde    cdx\n2  b   fg    fgx\n3  b    h     hx\n"}]},{"category":"Timedelta methods","name":"str.split","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.str.split('a|b')","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">split<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;a|b&quot;<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>[, , c]<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>[cde]<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>[fg]<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>[h]<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x   result\n0  a  abc  [, , c]\n1  a  cde    [cde]\n2  b   fg     [fg]\n3  b    h      [h]\n"}]},{"category":"Timedelta methods","name":"str.startswith","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.str.startswith('a|b')","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">startswith<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;a|b&quot;<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>False<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>False<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x  result\n0  a  abc   False\n1  a  cde   False\n2  b   fg   False\n3  b    h   False\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">startswith<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;a|b&quot;<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, (some_table.x LIKE 'a|b' || '%%') AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, (some_table.x LIKE 'a|b' || '%%') AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">startswith<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;a|b&quot;<\/span><span class=\"p\">))<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, (some_table.x LIKE 'a|b' || '%%') AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, (some_table.x LIKE 'a|b' || '%%') AS result \nFROM some_table\n"}]},{"category":"Timedelta methods","name":"str.strip","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.str.strip()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">strip<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>abc<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>cde<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>fg<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>h<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x result\n0  a  abc    abc\n1  a  cde    cde\n2  b   fg     fg\n3  b    h      h\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">strip<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, trim(some_table.x, ' \t\n\u000b\f\r') AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, trim(some_table.x, ' \t\n\u000b\f\r') AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">strip<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, trim(some_table.x, ' \t\n\u000b\f\r') AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, trim(some_table.x, ' \t\n\u000b\f\r') AS result \nFROM some_table\n"}]},{"category":"Timedelta methods","name":"str.swapcase","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.str.swapcase()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">swapcase<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>ABC<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>CDE<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>FG<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>H<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x result\n0  a  abc    ABC\n1  a  cde    CDE\n2  b   fg     FG\n3  b    h      H\n"}]},{"category":"Timedelta methods","name":"str.title","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.str.title()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">title<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>Abc<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>Cde<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>Fg<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>H<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x result\n0  a  abc    Abc\n1  a  cde    Cde\n2  b   fg     Fg\n3  b    h      H\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">title<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, initcap(some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, initcap(some_table.x) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">title<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, initcap(some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, initcap(some_table.x) AS result \nFROM some_table\n"}]},{"category":"Timedelta methods","name":"str.upper","fast grouped":"\u2705","postgresql":"\u2705","note":"","expr_frame":"_.x.str.upper()","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">upper<\/span><span class=\"p\">())<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>ABC<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>CDE<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>FG<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>H<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x result\n0  a  abc    ABC\n1  a  cde    CDE\n2  b   fg     FG\n3  b    h      H\n"},{"name":"SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">LazyTbl<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba.sql.utils<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span>\n\n<span class=\"n\">engine<\/span> <span class=\"o\">=<\/span> <span class=\"n\">mock_sqlalchemy_engine<\/span><span class=\"p\">(<\/span><span class=\"s2\">&quot;postgresql&quot;<\/span><span class=\"p\">)<\/span>\n<span class=\"n\">tbl<\/span> <span class=\"o\">=<\/span> <span class=\"n\">LazyTbl<\/span><span class=\"p\">(<\/span><span class=\"n\">engine<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;some_table&quot;<\/span><span class=\"p\">,<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;y&quot;<\/span><span class=\"p\">])<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">upper<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, upper(some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, upper(some_table.x) AS result \nFROM some_table\n"},{"name":"Grouped SQL Table","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">group_by<\/span>\n\n<span class=\"n\">query<\/span> <span class=\"o\">=<\/span> <span class=\"n\">tbl<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">group_by<\/span><span class=\"p\">(<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">g<\/span><span class=\"p\">)<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">upper<\/span><span class=\"p\">())<\/span> <span class=\"o\">&gt;&gt;<\/span> <span class=\"n\">show_query<\/span><span class=\"p\">()<\/span>\n<\/pre><\/div>\n","output":"<pre>SELECT some_table.g, some_table.x, some_table.y, upper(some_table.x) AS result \nFROM some_table\n<\/pre>","printed":"SELECT some_table.g, some_table.x, some_table.y, upper(some_table.x) AS result \nFROM some_table\n"}]},{"category":"Timedelta methods","name":"str.wrap","fast grouped":"\u2705","postgresql":"\ud83d\udea7","note":"","expr_frame":"_.x.str.wrap(2)","support_category":"done","examples":[{"name":"Pandas DataFrame","input":"<div class=\"highlight\"><pre style=\"text-align: left;\"><span><\/span><span class=\"kn\">import<\/span> <span class=\"nn\">pandas<\/span> <span class=\"kn\">as<\/span> <span class=\"nn\">pd<\/span>\n<span class=\"kn\">from<\/span> <span class=\"nn\">siuba<\/span> <span class=\"kn\">import<\/span> <span class=\"n\">_<\/span><span class=\"p\">,<\/span> <span class=\"n\">mutate<\/span>\n\n<span class=\"n\">data<\/span> <span class=\"o\">=<\/span> <span class=\"n\">pd<\/span><span class=\"o\">.<\/span><span class=\"n\">DataFrame<\/span><span class=\"p\">({<\/span><span class=\"s2\">&quot;g&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;a&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;b&quot;<\/span><span class=\"p\">],<\/span> <span class=\"s2\">&quot;x&quot;<\/span><span class=\"p\">:<\/span> <span class=\"p\">[<\/span><span class=\"s2\">&quot;abc&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;cde&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;fg&quot;<\/span><span class=\"p\">,<\/span> <span class=\"s2\">&quot;h&quot;<\/span><span class=\"p\">]})<\/span>\n\n<span class=\"n\">mutate<\/span><span class=\"p\">(<\/span><span class=\"n\">data<\/span><span class=\"p\">,<\/span> <span class=\"n\">result<\/span><span class=\"o\">=<\/span><span class=\"n\">_<\/span><span class=\"o\">.<\/span><span class=\"n\">x<\/span><span class=\"o\">.<\/span><span class=\"n\">str<\/span><span class=\"o\">.<\/span><span class=\"n\">wrap<\/span><span class=\"p\">(<\/span><span class=\"mi\">2<\/span><span class=\"p\">))<\/span>\n<\/pre><\/div>\n","output":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th><\/th>\n      <th>g<\/th>\n      <th>x<\/th>\n      <th>result<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>0<\/th>\n      <td>a<\/td>\n      <td>abc<\/td>\n      <td>ab\\nc<\/td>\n    <\/tr>\n    <tr>\n      <th>1<\/th>\n      <td>a<\/td>\n      <td>cde<\/td>\n      <td>cd\\ne<\/td>\n    <\/tr>\n    <tr>\n      <th>2<\/th>\n      <td>b<\/td>\n      <td>fg<\/td>\n      <td>fg<\/td>\n    <\/tr>\n    <tr>\n      <th>3<\/th>\n      <td>b<\/td>\n      <td>h<\/td>\n      <td>h<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","printed":"Out[1]: \n   g    x result\n0  a  abc  ab\\nc\n1  a  cde  cd\\ne\n2  b   fg     fg\n3  b    h      h\n"}]},{"category":"Timedelta methods","name":"str.zfill","fast grouped":"\ud83d\udea7","postgresql":"","note":"","expr_frame":"","support_category":"priority-medium","examples":""},{"category":"Timedelta properties","name":"dt.components","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"decision-needed","examples":""},{"category":"Timedelta properties","name":"dt.days","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"decision-needed","examples":""},{"category":"Timedelta properties","name":"dt.microseconds","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"decision-needed","examples":""},{"category":"Timedelta properties","name":"dt.nanoseconds","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"decision-needed","examples":""},{"category":"Timedelta properties","name":"dt.seconds","fast grouped":"\u274c","postgresql":"","note":"","expr_frame":"","support_category":"decision-needed","examples":""}]